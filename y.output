Terminals unused in grammar

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: auxProgram CBRACE

    2 auxProgram: CLASS ID OBRACE
    3           | auxProgram FieldDecl
    4           | auxProgram MethodDecl
    5           | auxProgram SEMI

    6 FieldDecl: PUBLIC STATIC auxFieldDecl SEMI
    7          | error SEMI

    8 auxFieldDecl: Type ID
    9             | auxFieldDecl COMMA ID

   10 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

   11 MethodHeader: Type ID OCURV FormalParams CCURV
   12             | VOID ID OCURV FormalParams CCURV

   13 MethodBody: AuxMethodBody CBRACE

   14 AuxMethodBody: OBRACE
   15              | AuxMethodBody VarDecl
   16              | AuxMethodBody Statement

   17 FormalParams: Type ID auxFormalParams
   18             | STRING OSQUARE CSQUARE ID
   19             | %empty

   20 auxFormalParams: COMMA Type ID auxFormalParams
   21                | %empty

   22 VarDecl: auxVarDecl SEMI

   23 auxVarDecl: Type ID
   24           | auxVarDecl COMMA ID

   25 Type: BOOL
   26     | INT
   27     | DOUBLE

   28 Statement: OBRACE auxStatement4 CBRACE
   29          | IF OCURV Expr CCURV Statement ELSE Statement
   30          | IF OCURV Expr CCURV Statement
   31          | WHILE OCURV Expr CCURV Statement
   32          | DO Statement WHILE OCURV Expr CCURV SEMI
   33          | PRINT OCURV auxStatement2 CCURV SEMI
   34          | auxStatement1 SEMI
   35          | RETURN auxStatement5 SEMI
   36          | error SEMI

   37 auxStatement1: Assignment
   38              | MethodInvocation
   39              | ParseArgs
   40              | %empty

   41 auxStatement2: Expr
   42              | STRLIT

   43 auxStatement4: Statement auxStatement4
   44              | %empty

   45 auxStatement5: Expr
   46              | %empty

   47 Assignment: ID ASSIGN Expr

   48 MethodInvocation: ID OCURV AuxMethodInvocation1 CCURV
   49                 | ID OCURV error CCURV

   50 AuxMethodInvocation1: Expr AuxMethodInvocation2
   51                     | %empty

   52 AuxMethodInvocation2: COMMA Expr AuxMethodInvocation2
   53                     | %empty

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV
   55          | PARSEINT OCURV error CCURV

   56 Expr: Assignment
   57     | auxExpr

   58 auxExpr: MethodInvocation
   59        | ParseArgs
   60        | auxExpr AND auxExpr
   61        | auxExpr OR auxExpr
   62        | auxExpr EQ auxExpr
   63        | auxExpr GEQ auxExpr
   64        | auxExpr GT auxExpr
   65        | auxExpr LEQ auxExpr
   66        | auxExpr LT auxExpr
   67        | auxExpr NEQ auxExpr
   68        | auxExpr PLUS auxExpr
   69        | auxExpr MINUS auxExpr
   70        | auxExpr STAR auxExpr
   71        | auxExpr DIV auxExpr
   72        | auxExpr MOD auxExpr
   73        | PLUS auxExpr
   74        | MINUS auxExpr
   75        | NOT auxExpr
   76        | ID DOTLENGTH
   77        | ID
   78        | OCURV Expr CCURV
   79        | BOOLLIT
   80        | DECLIT
   81        | REALLIT
   82        | OCURV error CCURV


Terminals, with rules where they appear

$end (0) 0
error (256) 7 36 49 55 82
BOOL (258) 25
CLASS (259) 2
DO (260) 32
DOTLENGTH (261) 76
DOUBLE (262) 27
ELSE (263) 29
IF (264) 29 30
INT (265) 26
PARSEINT (266) 54 55
PRINT (267) 33
PUBLIC (268) 6 10
RETURN (269) 35
STATIC (270) 6 10
STRING (271) 18
VOID (272) 12
WHILE (273) 31 32
OCURV (274) 11 12 29 30 31 32 33 48 49 54 55 78 82
CCURV (275) 11 12 29 30 31 32 33 48 49 54 55 78 82
OBRACE (276) 2 14 28
CBRACE (277) 1 13 28
OSQUARE (278) 18 54
CSQUARE (279) 18 54
AND (280) 60
OR (281) 61
LT (282) 66
GT (283) 64
EQ (284) 62
NEQ (285) 67
GEQ (286) 63
LEQ (287) 65
PLUS (288) 68 73
MINUS (289) 69 74
STAR (290) 70
DIV (291) 71
MOD (292) 72
NOT (293) 75
ASSIGN (294) 47
SEMI (295) 5 6 7 22 32 33 34 35 36
COMMA (296) 9 20 24 52
REALLIT (297) 81
DECLIT (298) 80
BOOLLIT (299) 79
ID (300) 2 8 9 11 12 17 18 20 23 24 47 48 49 54 76 77
STRLIT (301) 42
RESERVED (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
auxProgram (50)
    on left: 2 3 4 5, on right: 1 3 4 5
FieldDecl (51)
    on left: 6 7, on right: 3
auxFieldDecl (52)
    on left: 8 9, on right: 6 9
MethodDecl (53)
    on left: 10, on right: 4
MethodHeader (54)
    on left: 11 12, on right: 10
MethodBody (55)
    on left: 13, on right: 10
AuxMethodBody (56)
    on left: 14 15 16, on right: 13 15 16
FormalParams (57)
    on left: 17 18 19, on right: 11 12
auxFormalParams (58)
    on left: 20 21, on right: 17 20
VarDecl (59)
    on left: 22, on right: 15
auxVarDecl (60)
    on left: 23 24, on right: 22 24
Type (61)
    on left: 25 26 27, on right: 8 11 17 20 23
Statement (62)
    on left: 28 29 30 31 32 33 34 35 36, on right: 16 29 30 31 32 43
auxStatement1 (63)
    on left: 37 38 39 40, on right: 34
auxStatement2 (64)
    on left: 41 42, on right: 33
auxStatement4 (65)
    on left: 43 44, on right: 28 43
auxStatement5 (66)
    on left: 45 46, on right: 35
Assignment (67)
    on left: 47, on right: 37 56
MethodInvocation (68)
    on left: 48 49, on right: 38 58
AuxMethodInvocation1 (69)
    on left: 50 51, on right: 48
AuxMethodInvocation2 (70)
    on left: 52 53, on right: 50 52
ParseArgs (71)
    on left: 54 55, on right: 39 59
Expr (72)
    on left: 56 57, on right: 29 30 31 32 41 45 47 50 52 54 78
auxExpr (73)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
    76 77 78 79 80 81 82, on right: 57 60 61 62 63 64 65 66 67 68 69
    70 71 72 73 74 75


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program     go to state 2
    auxProgram  go to state 3


State 1

    2 auxProgram: CLASS . ID OBRACE

    ID  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: auxProgram . CBRACE
    3 auxProgram: auxProgram . FieldDecl
    4           | auxProgram . MethodDecl
    5           | auxProgram . SEMI

    error   shift, and go to state 6
    PUBLIC  shift, and go to state 7
    CBRACE  shift, and go to state 8
    SEMI    shift, and go to state 9

    FieldDecl   go to state 10
    MethodDecl  go to state 11


State 4

    2 auxProgram: CLASS ID . OBRACE

    OBRACE  shift, and go to state 12


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    7 FieldDecl: error . SEMI

    SEMI  shift, and go to state 13


State 7

    6 FieldDecl: PUBLIC . STATIC auxFieldDecl SEMI
   10 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody

    STATIC  shift, and go to state 14


State 8

    1 Program: auxProgram CBRACE .

    $default  reduce using rule 1 (Program)


State 9

    5 auxProgram: auxProgram SEMI .

    $default  reduce using rule 5 (auxProgram)


State 10

    3 auxProgram: auxProgram FieldDecl .

    $default  reduce using rule 3 (auxProgram)


State 11

    4 auxProgram: auxProgram MethodDecl .

    $default  reduce using rule 4 (auxProgram)


State 12

    2 auxProgram: CLASS ID OBRACE .

    $default  reduce using rule 2 (auxProgram)


State 13

    7 FieldDecl: error SEMI .

    $default  reduce using rule 7 (FieldDecl)


State 14

    6 FieldDecl: PUBLIC STATIC . auxFieldDecl SEMI
   10 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17
    VOID    shift, and go to state 18

    auxFieldDecl  go to state 19
    MethodHeader  go to state 20
    Type          go to state 21


State 15

   25 Type: BOOL .

    $default  reduce using rule 25 (Type)


State 16

   27 Type: DOUBLE .

    $default  reduce using rule 27 (Type)


State 17

   26 Type: INT .

    $default  reduce using rule 26 (Type)


State 18

   12 MethodHeader: VOID . ID OCURV FormalParams CCURV

    ID  shift, and go to state 22


State 19

    6 FieldDecl: PUBLIC STATIC auxFieldDecl . SEMI
    9 auxFieldDecl: auxFieldDecl . COMMA ID

    SEMI   shift, and go to state 23
    COMMA  shift, and go to state 24


State 20

   10 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    OBRACE  shift, and go to state 25

    MethodBody     go to state 26
    AuxMethodBody  go to state 27


State 21

    8 auxFieldDecl: Type . ID
   11 MethodHeader: Type . ID OCURV FormalParams CCURV

    ID  shift, and go to state 28


State 22

   12 MethodHeader: VOID ID . OCURV FormalParams CCURV

    OCURV  shift, and go to state 29


State 23

    6 FieldDecl: PUBLIC STATIC auxFieldDecl SEMI .

    $default  reduce using rule 6 (FieldDecl)


State 24

    9 auxFieldDecl: auxFieldDecl COMMA . ID

    ID  shift, and go to state 30


State 25

   14 AuxMethodBody: OBRACE .

    $default  reduce using rule 14 (AuxMethodBody)


State 26

   10 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 10 (MethodDecl)


State 27

   13 MethodBody: AuxMethodBody . CBRACE
   15 AuxMethodBody: AuxMethodBody . VarDecl
   16              | AuxMethodBody . Statement

    error     shift, and go to state 31
    BOOL      shift, and go to state 15
    DO        shift, and go to state 32
    DOUBLE    shift, and go to state 16
    IF        shift, and go to state 33
    INT       shift, and go to state 17
    PARSEINT  shift, and go to state 34
    PRINT     shift, and go to state 35
    RETURN    shift, and go to state 36
    WHILE     shift, and go to state 37
    OBRACE    shift, and go to state 38
    CBRACE    shift, and go to state 39
    ID        shift, and go to state 40

    SEMI  reduce using rule 40 (auxStatement1)

    VarDecl           go to state 41
    auxVarDecl        go to state 42
    Type              go to state 43
    Statement         go to state 44
    auxStatement1     go to state 45
    Assignment        go to state 46
    MethodInvocation  go to state 47
    ParseArgs         go to state 48


State 28

    8 auxFieldDecl: Type ID .
   11 MethodHeader: Type ID . OCURV FormalParams CCURV

    OCURV  shift, and go to state 49

    $default  reduce using rule 8 (auxFieldDecl)


State 29

   12 MethodHeader: VOID ID OCURV . FormalParams CCURV

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 50

    $default  reduce using rule 19 (FormalParams)

    FormalParams  go to state 51
    Type          go to state 52


State 30

    9 auxFieldDecl: auxFieldDecl COMMA ID .

    $default  reduce using rule 9 (auxFieldDecl)


State 31

   36 Statement: error . SEMI

    SEMI  shift, and go to state 53


State 32

   32 Statement: DO . Statement WHILE OCURV Expr CCURV SEMI

    error     shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    PARSEINT  shift, and go to state 34
    PRINT     shift, and go to state 35
    RETURN    shift, and go to state 36
    WHILE     shift, and go to state 37
    OBRACE    shift, and go to state 38
    ID        shift, and go to state 40

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 54
    auxStatement1     go to state 45
    Assignment        go to state 46
    MethodInvocation  go to state 47
    ParseArgs         go to state 48


State 33

   29 Statement: IF . OCURV Expr CCURV Statement ELSE Statement
   30          | IF . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 55


State 34

   54 ParseArgs: PARSEINT . OCURV ID OSQUARE Expr CSQUARE CCURV
   55          | PARSEINT . OCURV error CCURV

    OCURV  shift, and go to state 56


State 35

   33 Statement: PRINT . OCURV auxStatement2 CCURV SEMI

    OCURV  shift, and go to state 57


State 36

   35 Statement: RETURN . auxStatement5 SEMI

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    $default  reduce using rule 46 (auxStatement5)

    auxStatement5     go to state 66
    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 70
    auxExpr           go to state 71


State 37

   31 Statement: WHILE . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 72


State 38

   28 Statement: OBRACE . auxStatement4 CBRACE

    error     shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    PARSEINT  shift, and go to state 34
    PRINT     shift, and go to state 35
    RETURN    shift, and go to state 36
    WHILE     shift, and go to state 37
    OBRACE    shift, and go to state 38
    ID        shift, and go to state 40

    CBRACE  reduce using rule 44 (auxStatement4)
    SEMI    reduce using rule 40 (auxStatement1)

    Statement         go to state 73
    auxStatement1     go to state 45
    auxStatement4     go to state 74
    Assignment        go to state 46
    MethodInvocation  go to state 47
    ParseArgs         go to state 48


State 39

   13 MethodBody: AuxMethodBody CBRACE .

    $default  reduce using rule 13 (MethodBody)


State 40

   47 Assignment: ID . ASSIGN Expr
   48 MethodInvocation: ID . OCURV AuxMethodInvocation1 CCURV
   49                 | ID . OCURV error CCURV

    OCURV   shift, and go to state 75
    ASSIGN  shift, and go to state 76


State 41

   15 AuxMethodBody: AuxMethodBody VarDecl .

    $default  reduce using rule 15 (AuxMethodBody)


State 42

   22 VarDecl: auxVarDecl . SEMI
   24 auxVarDecl: auxVarDecl . COMMA ID

    SEMI   shift, and go to state 77
    COMMA  shift, and go to state 78


State 43

   23 auxVarDecl: Type . ID

    ID  shift, and go to state 79


State 44

   16 AuxMethodBody: AuxMethodBody Statement .

    $default  reduce using rule 16 (AuxMethodBody)


State 45

   34 Statement: auxStatement1 . SEMI

    SEMI  shift, and go to state 80


State 46

   37 auxStatement1: Assignment .

    $default  reduce using rule 37 (auxStatement1)


State 47

   38 auxStatement1: MethodInvocation .

    $default  reduce using rule 38 (auxStatement1)


State 48

   39 auxStatement1: ParseArgs .

    $default  reduce using rule 39 (auxStatement1)


State 49

   11 MethodHeader: Type ID OCURV . FormalParams CCURV

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 50

    $default  reduce using rule 19 (FormalParams)

    FormalParams  go to state 81
    Type          go to state 52


State 50

   18 FormalParams: STRING . OSQUARE CSQUARE ID

    OSQUARE  shift, and go to state 82


State 51

   12 MethodHeader: VOID ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 83


State 52

   17 FormalParams: Type . ID auxFormalParams

    ID  shift, and go to state 84


State 53

   36 Statement: error SEMI .

    $default  reduce using rule 36 (Statement)


State 54

   32 Statement: DO Statement . WHILE OCURV Expr CCURV SEMI

    WHILE  shift, and go to state 85


State 55

   29 Statement: IF OCURV . Expr CCURV Statement ELSE Statement
   30          | IF OCURV . Expr CCURV Statement

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 86
    auxExpr           go to state 71


State 56

   54 ParseArgs: PARSEINT OCURV . ID OSQUARE Expr CSQUARE CCURV
   55          | PARSEINT OCURV . error CCURV

    error  shift, and go to state 87
    ID     shift, and go to state 88


State 57

   33 Statement: PRINT OCURV . auxStatement2 CCURV SEMI

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65
    STRLIT    shift, and go to state 89

    auxStatement2     go to state 90
    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 91
    auxExpr           go to state 71


State 58

   78 auxExpr: OCURV . Expr CCURV
   82        | OCURV . error CCURV

    error     shift, and go to state 92
    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 93
    auxExpr           go to state 71


State 59

   73 auxExpr: PLUS . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 95


State 60

   74 auxExpr: MINUS . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 96


State 61

   75 auxExpr: NOT . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 97


State 62

   81 auxExpr: REALLIT .

    $default  reduce using rule 81 (auxExpr)


State 63

   80 auxExpr: DECLIT .

    $default  reduce using rule 80 (auxExpr)


State 64

   79 auxExpr: BOOLLIT .

    $default  reduce using rule 79 (auxExpr)


State 65

   47 Assignment: ID . ASSIGN Expr
   48 MethodInvocation: ID . OCURV AuxMethodInvocation1 CCURV
   49                 | ID . OCURV error CCURV
   76 auxExpr: ID . DOTLENGTH
   77        | ID .

    DOTLENGTH  shift, and go to state 98
    OCURV      shift, and go to state 75
    ASSIGN     shift, and go to state 76

    $default  reduce using rule 77 (auxExpr)


State 66

   35 Statement: RETURN auxStatement5 . SEMI

    SEMI  shift, and go to state 99


State 67

   56 Expr: Assignment .

    $default  reduce using rule 56 (Expr)


State 68

   58 auxExpr: MethodInvocation .

    $default  reduce using rule 58 (auxExpr)


State 69

   59 auxExpr: ParseArgs .

    $default  reduce using rule 59 (auxExpr)


State 70

   45 auxStatement5: Expr .

    $default  reduce using rule 45 (auxStatement5)


State 71

   57 Expr: auxExpr .
   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 57 (Expr)


State 72

   31 Statement: WHILE OCURV . Expr CCURV Statement

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 113
    auxExpr           go to state 71


State 73

   43 auxStatement4: Statement . auxStatement4

    error     shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    PARSEINT  shift, and go to state 34
    PRINT     shift, and go to state 35
    RETURN    shift, and go to state 36
    WHILE     shift, and go to state 37
    OBRACE    shift, and go to state 38
    ID        shift, and go to state 40

    CBRACE  reduce using rule 44 (auxStatement4)
    SEMI    reduce using rule 40 (auxStatement1)

    Statement         go to state 73
    auxStatement1     go to state 45
    auxStatement4     go to state 114
    Assignment        go to state 46
    MethodInvocation  go to state 47
    ParseArgs         go to state 48


State 74

   28 Statement: OBRACE auxStatement4 . CBRACE

    CBRACE  shift, and go to state 115


State 75

   48 MethodInvocation: ID OCURV . AuxMethodInvocation1 CCURV
   49                 | ID OCURV . error CCURV

    error     shift, and go to state 116
    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    CCURV  reduce using rule 51 (AuxMethodInvocation1)

    Assignment            go to state 67
    MethodInvocation      go to state 68
    AuxMethodInvocation1  go to state 117
    ParseArgs             go to state 69
    Expr                  go to state 118
    auxExpr               go to state 71


State 76

   47 Assignment: ID ASSIGN . Expr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 119
    auxExpr           go to state 71


State 77

   22 VarDecl: auxVarDecl SEMI .

    $default  reduce using rule 22 (VarDecl)


State 78

   24 auxVarDecl: auxVarDecl COMMA . ID

    ID  shift, and go to state 120


State 79

   23 auxVarDecl: Type ID .

    $default  reduce using rule 23 (auxVarDecl)


State 80

   34 Statement: auxStatement1 SEMI .

    $default  reduce using rule 34 (Statement)


State 81

   11 MethodHeader: Type ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 121


State 82

   18 FormalParams: STRING OSQUARE . CSQUARE ID

    CSQUARE  shift, and go to state 122


State 83

   12 MethodHeader: VOID ID OCURV FormalParams CCURV .

    $default  reduce using rule 12 (MethodHeader)


State 84

   17 FormalParams: Type ID . auxFormalParams

    COMMA  shift, and go to state 123

    $default  reduce using rule 21 (auxFormalParams)

    auxFormalParams  go to state 124


State 85

   32 Statement: DO Statement WHILE . OCURV Expr CCURV SEMI

    OCURV  shift, and go to state 125


State 86

   29 Statement: IF OCURV Expr . CCURV Statement ELSE Statement
   30          | IF OCURV Expr . CCURV Statement

    CCURV  shift, and go to state 126


State 87

   55 ParseArgs: PARSEINT OCURV error . CCURV

    CCURV  shift, and go to state 127


State 88

   54 ParseArgs: PARSEINT OCURV ID . OSQUARE Expr CSQUARE CCURV

    OSQUARE  shift, and go to state 128


State 89

   42 auxStatement2: STRLIT .

    $default  reduce using rule 42 (auxStatement2)


State 90

   33 Statement: PRINT OCURV auxStatement2 . CCURV SEMI

    CCURV  shift, and go to state 129


State 91

   41 auxStatement2: Expr .

    $default  reduce using rule 41 (auxStatement2)


State 92

   82 auxExpr: OCURV error . CCURV

    CCURV  shift, and go to state 130


State 93

   78 auxExpr: OCURV Expr . CCURV

    CCURV  shift, and go to state 131


State 94

   48 MethodInvocation: ID . OCURV AuxMethodInvocation1 CCURV
   49                 | ID . OCURV error CCURV
   76 auxExpr: ID . DOTLENGTH
   77        | ID .

    DOTLENGTH  shift, and go to state 98
    OCURV      shift, and go to state 75

    $default  reduce using rule 77 (auxExpr)


State 95

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr
   73        | PLUS auxExpr .

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 73 (auxExpr)


State 96

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr
   74        | MINUS auxExpr .

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 74 (auxExpr)


State 97

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr
   75        | NOT auxExpr .

    $default  reduce using rule 75 (auxExpr)


State 98

   76 auxExpr: ID DOTLENGTH .

    $default  reduce using rule 76 (auxExpr)


State 99

   35 Statement: RETURN auxStatement5 SEMI .

    $default  reduce using rule 35 (Statement)


State 100

   60 auxExpr: auxExpr AND . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 132


State 101

   61 auxExpr: auxExpr OR . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 133


State 102

   66 auxExpr: auxExpr LT . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 134


State 103

   64 auxExpr: auxExpr GT . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 135


State 104

   62 auxExpr: auxExpr EQ . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 136


State 105

   67 auxExpr: auxExpr NEQ . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 137


State 106

   63 auxExpr: auxExpr GEQ . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 138


State 107

   65 auxExpr: auxExpr LEQ . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 139


State 108

   68 auxExpr: auxExpr PLUS . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 140


State 109

   69 auxExpr: auxExpr MINUS . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 141


State 110

   70 auxExpr: auxExpr STAR . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 142


State 111

   71 auxExpr: auxExpr DIV . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 143


State 112

   72 auxExpr: auxExpr MOD . auxExpr

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 94

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    auxExpr           go to state 144


State 113

   31 Statement: WHILE OCURV Expr . CCURV Statement

    CCURV  shift, and go to state 145


State 114

   43 auxStatement4: Statement auxStatement4 .

    $default  reduce using rule 43 (auxStatement4)


State 115

   28 Statement: OBRACE auxStatement4 CBRACE .

    $default  reduce using rule 28 (Statement)


State 116

   49 MethodInvocation: ID OCURV error . CCURV

    CCURV  shift, and go to state 146


State 117

   48 MethodInvocation: ID OCURV AuxMethodInvocation1 . CCURV

    CCURV  shift, and go to state 147


State 118

   50 AuxMethodInvocation1: Expr . AuxMethodInvocation2

    COMMA  shift, and go to state 148

    $default  reduce using rule 53 (AuxMethodInvocation2)

    AuxMethodInvocation2  go to state 149


State 119

   47 Assignment: ID ASSIGN Expr .

    $default  reduce using rule 47 (Assignment)


State 120

   24 auxVarDecl: auxVarDecl COMMA ID .

    $default  reduce using rule 24 (auxVarDecl)


State 121

   11 MethodHeader: Type ID OCURV FormalParams CCURV .

    $default  reduce using rule 11 (MethodHeader)


State 122

   18 FormalParams: STRING OSQUARE CSQUARE . ID

    ID  shift, and go to state 150


State 123

   20 auxFormalParams: COMMA . Type ID auxFormalParams

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17

    Type  go to state 151


State 124

   17 FormalParams: Type ID auxFormalParams .

    $default  reduce using rule 17 (FormalParams)


State 125

   32 Statement: DO Statement WHILE OCURV . Expr CCURV SEMI

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 152
    auxExpr           go to state 71


State 126

   29 Statement: IF OCURV Expr CCURV . Statement ELSE Statement
   30          | IF OCURV Expr CCURV . Statement

    error     shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    PARSEINT  shift, and go to state 34
    PRINT     shift, and go to state 35
    RETURN    shift, and go to state 36
    WHILE     shift, and go to state 37
    OBRACE    shift, and go to state 38
    ID        shift, and go to state 40

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 153
    auxStatement1     go to state 45
    Assignment        go to state 46
    MethodInvocation  go to state 47
    ParseArgs         go to state 48


State 127

   55 ParseArgs: PARSEINT OCURV error CCURV .

    $default  reduce using rule 55 (ParseArgs)


State 128

   54 ParseArgs: PARSEINT OCURV ID OSQUARE . Expr CSQUARE CCURV

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 154
    auxExpr           go to state 71


State 129

   33 Statement: PRINT OCURV auxStatement2 CCURV . SEMI

    SEMI  shift, and go to state 155


State 130

   82 auxExpr: OCURV error CCURV .

    $default  reduce using rule 82 (auxExpr)


State 131

   78 auxExpr: OCURV Expr CCURV .

    $default  reduce using rule 78 (auxExpr)


State 132

   60 auxExpr: auxExpr . AND auxExpr
   60        | auxExpr AND auxExpr .
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 60 (auxExpr)


State 133

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   61        | auxExpr OR auxExpr .
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    AND    shift, and go to state 100
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 61 (auxExpr)


State 134

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   66        | auxExpr LT auxExpr .
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 66 (auxExpr)


State 135

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   64        | auxExpr GT auxExpr .
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 64 (auxExpr)


State 136

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   62        | auxExpr EQ auxExpr .
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    LT     shift, and go to state 102
    GT     shift, and go to state 103
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 62 (auxExpr)


State 137

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   67        | auxExpr NEQ auxExpr .
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    LT     shift, and go to state 102
    GT     shift, and go to state 103
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 67 (auxExpr)


State 138

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   63        | auxExpr GEQ auxExpr .
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 63 (auxExpr)


State 139

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   65        | auxExpr LEQ auxExpr .
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 65 (auxExpr)


State 140

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   68        | auxExpr PLUS auxExpr .
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 68 (auxExpr)


State 141

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   69        | auxExpr MINUS auxExpr .
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 69 (auxExpr)


State 142

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   70        | auxExpr STAR auxExpr .
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    $default  reduce using rule 70 (auxExpr)


State 143

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   71        | auxExpr DIV auxExpr .
   72        | auxExpr . MOD auxExpr

    $default  reduce using rule 71 (auxExpr)


State 144

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr
   72        | auxExpr MOD auxExpr .

    $default  reduce using rule 72 (auxExpr)


State 145

   31 Statement: WHILE OCURV Expr CCURV . Statement

    error     shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    PARSEINT  shift, and go to state 34
    PRINT     shift, and go to state 35
    RETURN    shift, and go to state 36
    WHILE     shift, and go to state 37
    OBRACE    shift, and go to state 38
    ID        shift, and go to state 40

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 156
    auxStatement1     go to state 45
    Assignment        go to state 46
    MethodInvocation  go to state 47
    ParseArgs         go to state 48


State 146

   49 MethodInvocation: ID OCURV error CCURV .

    $default  reduce using rule 49 (MethodInvocation)


State 147

   48 MethodInvocation: ID OCURV AuxMethodInvocation1 CCURV .

    $default  reduce using rule 48 (MethodInvocation)


State 148

   52 AuxMethodInvocation2: COMMA . Expr AuxMethodInvocation2

    PARSEINT  shift, and go to state 34
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 157
    auxExpr           go to state 71


State 149

   50 AuxMethodInvocation1: Expr AuxMethodInvocation2 .

    $default  reduce using rule 50 (AuxMethodInvocation1)


State 150

   18 FormalParams: STRING OSQUARE CSQUARE ID .

    $default  reduce using rule 18 (FormalParams)


State 151

   20 auxFormalParams: COMMA Type . ID auxFormalParams

    ID  shift, and go to state 158


State 152

   32 Statement: DO Statement WHILE OCURV Expr . CCURV SEMI

    CCURV  shift, and go to state 159


State 153

   29 Statement: IF OCURV Expr CCURV Statement . ELSE Statement
   30          | IF OCURV Expr CCURV Statement .

    ELSE  shift, and go to state 160

    $default  reduce using rule 30 (Statement)


State 154

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr . CSQUARE CCURV

    CSQUARE  shift, and go to state 161


State 155

   33 Statement: PRINT OCURV auxStatement2 CCURV SEMI .

    $default  reduce using rule 33 (Statement)


State 156

   31 Statement: WHILE OCURV Expr CCURV Statement .

    $default  reduce using rule 31 (Statement)


State 157

   52 AuxMethodInvocation2: COMMA Expr . AuxMethodInvocation2

    COMMA  shift, and go to state 148

    $default  reduce using rule 53 (AuxMethodInvocation2)

    AuxMethodInvocation2  go to state 162


State 158

   20 auxFormalParams: COMMA Type ID . auxFormalParams

    COMMA  shift, and go to state 123

    $default  reduce using rule 21 (auxFormalParams)

    auxFormalParams  go to state 163


State 159

   32 Statement: DO Statement WHILE OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 164


State 160

   29 Statement: IF OCURV Expr CCURV Statement ELSE . Statement

    error     shift, and go to state 31
    DO        shift, and go to state 32
    IF        shift, and go to state 33
    PARSEINT  shift, and go to state 34
    PRINT     shift, and go to state 35
    RETURN    shift, and go to state 36
    WHILE     shift, and go to state 37
    OBRACE    shift, and go to state 38
    ID        shift, and go to state 40

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 165
    auxStatement1     go to state 45
    Assignment        go to state 46
    MethodInvocation  go to state 47
    ParseArgs         go to state 48


State 161

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE . CCURV

    CCURV  shift, and go to state 166


State 162

   52 AuxMethodInvocation2: COMMA Expr AuxMethodInvocation2 .

    $default  reduce using rule 52 (AuxMethodInvocation2)


State 163

   20 auxFormalParams: COMMA Type ID auxFormalParams .

    $default  reduce using rule 20 (auxFormalParams)


State 164

   32 Statement: DO Statement WHILE OCURV Expr CCURV SEMI .

    $default  reduce using rule 32 (Statement)


State 165

   29 Statement: IF OCURV Expr CCURV Statement ELSE Statement .

    $default  reduce using rule 29 (Statement)


State 166

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV .

    $default  reduce using rule 54 (ParseArgs)
