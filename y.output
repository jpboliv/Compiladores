Terminals unused in grammar

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID OBRACE auxProgram CBRACE

    2 auxProgram: FieldDecl auxProgram
    3           | MethodDecl auxProgram
    4           | SEMI auxProgram
    5           | %empty

    6 FieldDecl: PUBLIC STATIC Type ID auxFieldDecl SEMI
    7          | error SEMI

    8 auxFieldDecl: COMMA ID auxFieldDecl
    9             | %empty

   10 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

   11 MethodHeader: Type ID OCURV AuxMethodHelper2 CCURV
   12             | VOID ID OCURV AuxMethodHelper2 CCURV

   13 AuxMethodHelper2: FormalParams
   14                 | %empty

   15 MethodBody: OBRACE AuxMethodBody CBRACE

   16 AuxMethodBody: VarDecl AuxMethodBody
   17              | Statement AuxMethodBody
   18              | %empty

   19 FormalParams: Type ID auxFormalParams
   20             | STRING OSQUARE CSQUARE ID

   21 auxFormalParams: COMMA Type ID auxFormalParams
   22                | %empty

   23 VarDecl: Type ID auxVarDecl SEMI

   24 auxVarDecl: COMMA ID auxVarDecl
   25           | %empty

   26 Type: BOOL
   27     | INT
   28     | DOUBLE

   29 Statement: OBRACE auxStatement4 CBRACE
   30          | IF OCURV Expr CCURV Statement ELSE Statement
   31          | IF OCURV Expr CCURV Statement
   32          | WHILE OCURV Expr CCURV Statement
   33          | DO Statement WHILE OCURV Expr CCURV SEMI
   34          | PRINT OCURV auxStatement2 CCURV SEMI
   35          | auxStatement1 SEMI
   36          | RETURN auxStatement5 SEMI
   37          | error SEMI

   38 auxStatement1: Assignment
   39              | MethodInvocation
   40              | ParseArgs
   41              | %empty

   42 auxStatement2: Expr
   43              | STRLIT

   44 auxStatement4: Statement auxStatement4
   45              | %empty

   46 auxStatement5: Expr
   47              | %empty

   48 Assignment: ID ASSIGN Expr

   49 MethodInvocation: ID OCURV AuxMethodInvocation1 CCURV
   50                 | ID OCURV error CCURV

   51 AuxMethodInvocation1: Expr AuxMethodInvocation2
   52                     | %empty

   53 AuxMethodInvocation2: COMMA Expr AuxMethodInvocation2
   54                     | %empty

   55 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV
   56          | PARSEINT OCURV error CCURV

   57 Expr: Assignment
   58     | MethodInvocation
   59     | ParseArgs
   60     | Expr AND Expr
   61     | Expr OR Expr
   62     | Expr EQ Expr
   63     | Expr GEQ Expr
   64     | Expr GT Expr
   65     | Expr LEQ Expr
   66     | Expr LT Expr
   67     | Expr NEQ Expr
   68     | Expr PLUS Expr
   69     | Expr MINUS Expr
   70     | Expr STAR Expr
   71     | Expr DIV Expr
   72     | Expr MOD Expr
   73     | PLUS Expr
   74     | MINUS Expr
   75     | NOT Expr
   76     | ID DOTLENGTH
   77     | ID
   78     | OCURV Expr CCURV
   79     | BOOLLIT
   80     | DECLIT
   81     | REALLIT
   82     | OCURV error CCURV


Terminals, with rules where they appear

$end (0) 0
error (256) 7 37 50 56 82
BOOL (258) 26
CLASS (259) 1
DO (260) 33
DOTLENGTH (261) 76
DOUBLE (262) 28
ELSE (263) 30
IF (264) 30 31
INT (265) 27
PARSEINT (266) 55 56
PRINT (267) 34
PUBLIC (268) 6 10
RETURN (269) 36
STATIC (270) 6 10
STRING (271) 20
VOID (272) 12
WHILE (273) 32 33
OCURV (274) 11 12 30 31 32 33 34 49 50 55 56 78 82
CCURV (275) 11 12 30 31 32 33 34 49 50 55 56 78 82
OBRACE (276) 1 15 29
CBRACE (277) 1 15 29
OSQUARE (278) 20 55
CSQUARE (279) 20 55
AND (280) 60
OR (281) 61
LT (282) 66
GT (283) 64
EQ (284) 62
NEQ (285) 67
GEQ (286) 63
LEQ (287) 65
PLUS (288) 68 73
MINUS (289) 69 74
STAR (290) 70
DIV (291) 71
MOD (292) 72
NOT (293) 75
ASSIGN (294) 48
SEMI (295) 4 6 7 23 33 34 35 36 37
COMMA (296) 8 21 24 53
RESERVED (297)
REALLIT (298) 81
DECLIT (299) 80
BOOLLIT (300) 79
ID (301) 1 6 8 11 12 19 20 21 23 24 48 49 50 55 76 77
STRLIT (302) 43


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
auxProgram (50)
    on left: 2 3 4 5, on right: 1 2 3 4
FieldDecl (51)
    on left: 6 7, on right: 2
auxFieldDecl (52)
    on left: 8 9, on right: 6 8
MethodDecl (53)
    on left: 10, on right: 3
MethodHeader (54)
    on left: 11 12, on right: 10
AuxMethodHelper2 (55)
    on left: 13 14, on right: 11 12
MethodBody (56)
    on left: 15, on right: 10
AuxMethodBody (57)
    on left: 16 17 18, on right: 15 16 17
FormalParams (58)
    on left: 19 20, on right: 13
auxFormalParams (59)
    on left: 21 22, on right: 19 21
VarDecl (60)
    on left: 23, on right: 16
auxVarDecl (61)
    on left: 24 25, on right: 23 24
Type (62)
    on left: 26 27 28, on right: 6 11 19 21 23
Statement (63)
    on left: 29 30 31 32 33 34 35 36 37, on right: 17 30 31 32 33 44
auxStatement1 (64)
    on left: 38 39 40 41, on right: 35
auxStatement2 (65)
    on left: 42 43, on right: 34
auxStatement4 (66)
    on left: 44 45, on right: 29 44
auxStatement5 (67)
    on left: 46 47, on right: 36
Assignment (68)
    on left: 48, on right: 38 57
MethodInvocation (69)
    on left: 49 50, on right: 39 58
AuxMethodInvocation1 (70)
    on left: 51 52, on right: 49
AuxMethodInvocation2 (71)
    on left: 53 54, on right: 51 53
ParseArgs (72)
    on left: 55 56, on right: 40 59
Expr (73)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
    75 76 77 78 79 80 81 82, on right: 30 31 32 33 42 46 48 51 53 55
    60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 78


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS . ID OBRACE auxProgram CBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID . OBRACE auxProgram CBRACE

    OBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: CLASS ID OBRACE . auxProgram CBRACE

    error   shift, and go to state 6
    PUBLIC  shift, and go to state 7
    SEMI    shift, and go to state 8

    CBRACE  reduce using rule 5 (auxProgram)

    auxProgram  go to state 9
    FieldDecl   go to state 10
    MethodDecl  go to state 11


State 6

    7 FieldDecl: error . SEMI

    SEMI  shift, and go to state 12


State 7

    6 FieldDecl: PUBLIC . STATIC Type ID auxFieldDecl SEMI
   10 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody

    STATIC  shift, and go to state 13


State 8

    4 auxProgram: SEMI . auxProgram

    error   shift, and go to state 6
    PUBLIC  shift, and go to state 7
    SEMI    shift, and go to state 8

    CBRACE  reduce using rule 5 (auxProgram)

    auxProgram  go to state 14
    FieldDecl   go to state 10
    MethodDecl  go to state 11


State 9

    1 Program: CLASS ID OBRACE auxProgram . CBRACE

    CBRACE  shift, and go to state 15


State 10

    2 auxProgram: FieldDecl . auxProgram

    error   shift, and go to state 6
    PUBLIC  shift, and go to state 7
    SEMI    shift, and go to state 8

    CBRACE  reduce using rule 5 (auxProgram)

    auxProgram  go to state 16
    FieldDecl   go to state 10
    MethodDecl  go to state 11


State 11

    3 auxProgram: MethodDecl . auxProgram

    error   shift, and go to state 6
    PUBLIC  shift, and go to state 7
    SEMI    shift, and go to state 8

    CBRACE  reduce using rule 5 (auxProgram)

    auxProgram  go to state 17
    FieldDecl   go to state 10
    MethodDecl  go to state 11


State 12

    7 FieldDecl: error SEMI .

    $default  reduce using rule 7 (FieldDecl)


State 13

    6 FieldDecl: PUBLIC STATIC . Type ID auxFieldDecl SEMI
   10 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    VOID    shift, and go to state 21

    MethodHeader  go to state 22
    Type          go to state 23


State 14

    4 auxProgram: SEMI auxProgram .

    $default  reduce using rule 4 (auxProgram)


State 15

    1 Program: CLASS ID OBRACE auxProgram CBRACE .

    $default  reduce using rule 1 (Program)


State 16

    2 auxProgram: FieldDecl auxProgram .

    $default  reduce using rule 2 (auxProgram)


State 17

    3 auxProgram: MethodDecl auxProgram .

    $default  reduce using rule 3 (auxProgram)


State 18

   26 Type: BOOL .

    $default  reduce using rule 26 (Type)


State 19

   28 Type: DOUBLE .

    $default  reduce using rule 28 (Type)


State 20

   27 Type: INT .

    $default  reduce using rule 27 (Type)


State 21

   12 MethodHeader: VOID . ID OCURV AuxMethodHelper2 CCURV

    ID  shift, and go to state 24


State 22

   10 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    OBRACE  shift, and go to state 25

    MethodBody  go to state 26


State 23

    6 FieldDecl: PUBLIC STATIC Type . ID auxFieldDecl SEMI
   11 MethodHeader: Type . ID OCURV AuxMethodHelper2 CCURV

    ID  shift, and go to state 27


State 24

   12 MethodHeader: VOID ID . OCURV AuxMethodHelper2 CCURV

    OCURV  shift, and go to state 28


State 25

   15 MethodBody: OBRACE . AuxMethodBody CBRACE

    error     shift, and go to state 29
    BOOL      shift, and go to state 18
    DO        shift, and go to state 30
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 31
    INT       shift, and go to state 20
    PARSEINT  shift, and go to state 32
    PRINT     shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    OBRACE    shift, and go to state 36
    ID        shift, and go to state 37

    CBRACE  reduce using rule 18 (AuxMethodBody)
    SEMI    reduce using rule 41 (auxStatement1)

    AuxMethodBody     go to state 38
    VarDecl           go to state 39
    Type              go to state 40
    Statement         go to state 41
    auxStatement1     go to state 42
    Assignment        go to state 43
    MethodInvocation  go to state 44
    ParseArgs         go to state 45


State 26

   10 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 10 (MethodDecl)


State 27

    6 FieldDecl: PUBLIC STATIC Type ID . auxFieldDecl SEMI
   11 MethodHeader: Type ID . OCURV AuxMethodHelper2 CCURV

    OCURV  shift, and go to state 46
    COMMA  shift, and go to state 47

    $default  reduce using rule 9 (auxFieldDecl)

    auxFieldDecl  go to state 48


State 28

   12 MethodHeader: VOID ID OCURV . AuxMethodHelper2 CCURV

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 49

    $default  reduce using rule 14 (AuxMethodHelper2)

    AuxMethodHelper2  go to state 50
    FormalParams      go to state 51
    Type              go to state 52


State 29

   37 Statement: error . SEMI

    SEMI  shift, and go to state 53


State 30

   33 Statement: DO . Statement WHILE OCURV Expr CCURV SEMI

    error     shift, and go to state 29
    DO        shift, and go to state 30
    IF        shift, and go to state 31
    PARSEINT  shift, and go to state 32
    PRINT     shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    OBRACE    shift, and go to state 36
    ID        shift, and go to state 37

    SEMI  reduce using rule 41 (auxStatement1)

    Statement         go to state 54
    auxStatement1     go to state 42
    Assignment        go to state 43
    MethodInvocation  go to state 44
    ParseArgs         go to state 45


State 31

   30 Statement: IF . OCURV Expr CCURV Statement ELSE Statement
   31          | IF . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 55


State 32

   55 ParseArgs: PARSEINT . OCURV ID OSQUARE Expr CSQUARE CCURV
   56          | PARSEINT . OCURV error CCURV

    OCURV  shift, and go to state 56


State 33

   34 Statement: PRINT . OCURV auxStatement2 CCURV SEMI

    OCURV  shift, and go to state 57


State 34

   36 Statement: RETURN . auxStatement5 SEMI

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    $default  reduce using rule 47 (auxStatement5)

    auxStatement5     go to state 66
    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 70


State 35

   32 Statement: WHILE . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 71


State 36

   29 Statement: OBRACE . auxStatement4 CBRACE

    error     shift, and go to state 29
    DO        shift, and go to state 30
    IF        shift, and go to state 31
    PARSEINT  shift, and go to state 32
    PRINT     shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    OBRACE    shift, and go to state 36
    ID        shift, and go to state 37

    CBRACE  reduce using rule 45 (auxStatement4)
    SEMI    reduce using rule 41 (auxStatement1)

    Statement         go to state 72
    auxStatement1     go to state 42
    auxStatement4     go to state 73
    Assignment        go to state 43
    MethodInvocation  go to state 44
    ParseArgs         go to state 45


State 37

   48 Assignment: ID . ASSIGN Expr
   49 MethodInvocation: ID . OCURV AuxMethodInvocation1 CCURV
   50                 | ID . OCURV error CCURV

    OCURV   shift, and go to state 74
    ASSIGN  shift, and go to state 75


State 38

   15 MethodBody: OBRACE AuxMethodBody . CBRACE

    CBRACE  shift, and go to state 76


State 39

   16 AuxMethodBody: VarDecl . AuxMethodBody

    error     shift, and go to state 29
    BOOL      shift, and go to state 18
    DO        shift, and go to state 30
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 31
    INT       shift, and go to state 20
    PARSEINT  shift, and go to state 32
    PRINT     shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    OBRACE    shift, and go to state 36
    ID        shift, and go to state 37

    CBRACE  reduce using rule 18 (AuxMethodBody)
    SEMI    reduce using rule 41 (auxStatement1)

    AuxMethodBody     go to state 77
    VarDecl           go to state 39
    Type              go to state 40
    Statement         go to state 41
    auxStatement1     go to state 42
    Assignment        go to state 43
    MethodInvocation  go to state 44
    ParseArgs         go to state 45


State 40

   23 VarDecl: Type . ID auxVarDecl SEMI

    ID  shift, and go to state 78


State 41

   17 AuxMethodBody: Statement . AuxMethodBody

    error     shift, and go to state 29
    BOOL      shift, and go to state 18
    DO        shift, and go to state 30
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 31
    INT       shift, and go to state 20
    PARSEINT  shift, and go to state 32
    PRINT     shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    OBRACE    shift, and go to state 36
    ID        shift, and go to state 37

    CBRACE  reduce using rule 18 (AuxMethodBody)
    SEMI    reduce using rule 41 (auxStatement1)

    AuxMethodBody     go to state 79
    VarDecl           go to state 39
    Type              go to state 40
    Statement         go to state 41
    auxStatement1     go to state 42
    Assignment        go to state 43
    MethodInvocation  go to state 44
    ParseArgs         go to state 45


State 42

   35 Statement: auxStatement1 . SEMI

    SEMI  shift, and go to state 80


State 43

   38 auxStatement1: Assignment .

    $default  reduce using rule 38 (auxStatement1)


State 44

   39 auxStatement1: MethodInvocation .

    $default  reduce using rule 39 (auxStatement1)


State 45

   40 auxStatement1: ParseArgs .

    $default  reduce using rule 40 (auxStatement1)


State 46

   11 MethodHeader: Type ID OCURV . AuxMethodHelper2 CCURV

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 49

    $default  reduce using rule 14 (AuxMethodHelper2)

    AuxMethodHelper2  go to state 81
    FormalParams      go to state 51
    Type              go to state 52


State 47

    8 auxFieldDecl: COMMA . ID auxFieldDecl

    ID  shift, and go to state 82


State 48

    6 FieldDecl: PUBLIC STATIC Type ID auxFieldDecl . SEMI

    SEMI  shift, and go to state 83


State 49

   20 FormalParams: STRING . OSQUARE CSQUARE ID

    OSQUARE  shift, and go to state 84


State 50

   12 MethodHeader: VOID ID OCURV AuxMethodHelper2 . CCURV

    CCURV  shift, and go to state 85


State 51

   13 AuxMethodHelper2: FormalParams .

    $default  reduce using rule 13 (AuxMethodHelper2)


State 52

   19 FormalParams: Type . ID auxFormalParams

    ID  shift, and go to state 86


State 53

   37 Statement: error SEMI .

    $default  reduce using rule 37 (Statement)


State 54

   33 Statement: DO Statement . WHILE OCURV Expr CCURV SEMI

    WHILE  shift, and go to state 87


State 55

   30 Statement: IF OCURV . Expr CCURV Statement ELSE Statement
   31          | IF OCURV . Expr CCURV Statement

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 88


State 56

   55 ParseArgs: PARSEINT OCURV . ID OSQUARE Expr CSQUARE CCURV
   56          | PARSEINT OCURV . error CCURV

    error  shift, and go to state 89
    ID     shift, and go to state 90


State 57

   34 Statement: PRINT OCURV . auxStatement2 CCURV SEMI

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65
    STRLIT    shift, and go to state 91

    auxStatement2     go to state 92
    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 93


State 58

   78 Expr: OCURV . Expr CCURV
   82     | OCURV . error CCURV

    error     shift, and go to state 94
    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 95


State 59

   73 Expr: PLUS . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 96


State 60

   74 Expr: MINUS . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 97


State 61

   75 Expr: NOT . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 98


State 62

   81 Expr: REALLIT .

    $default  reduce using rule 81 (Expr)


State 63

   80 Expr: DECLIT .

    $default  reduce using rule 80 (Expr)


State 64

   79 Expr: BOOLLIT .

    $default  reduce using rule 79 (Expr)


State 65

   48 Assignment: ID . ASSIGN Expr
   49 MethodInvocation: ID . OCURV AuxMethodInvocation1 CCURV
   50                 | ID . OCURV error CCURV
   76 Expr: ID . DOTLENGTH
   77     | ID .

    DOTLENGTH  shift, and go to state 99
    OCURV      shift, and go to state 74
    ASSIGN     shift, and go to state 75

    $default  reduce using rule 77 (Expr)


State 66

   36 Statement: RETURN auxStatement5 . SEMI

    SEMI  shift, and go to state 100


State 67

   57 Expr: Assignment .

    $default  reduce using rule 57 (Expr)


State 68

   58 Expr: MethodInvocation .

    $default  reduce using rule 58 (Expr)


State 69

   59 Expr: ParseArgs .

    $default  reduce using rule 59 (Expr)


State 70

   46 auxStatement5: Expr .
   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    AND    shift, and go to state 101
    OR     shift, and go to state 102
    LT     shift, and go to state 103
    GT     shift, and go to state 104
    EQ     shift, and go to state 105
    NEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113

    $default  reduce using rule 46 (auxStatement5)


State 71

   32 Statement: WHILE OCURV . Expr CCURV Statement

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 114


State 72

   44 auxStatement4: Statement . auxStatement4

    error     shift, and go to state 29
    DO        shift, and go to state 30
    IF        shift, and go to state 31
    PARSEINT  shift, and go to state 32
    PRINT     shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    OBRACE    shift, and go to state 36
    ID        shift, and go to state 37

    CBRACE  reduce using rule 45 (auxStatement4)
    SEMI    reduce using rule 41 (auxStatement1)

    Statement         go to state 72
    auxStatement1     go to state 42
    auxStatement4     go to state 115
    Assignment        go to state 43
    MethodInvocation  go to state 44
    ParseArgs         go to state 45


State 73

   29 Statement: OBRACE auxStatement4 . CBRACE

    CBRACE  shift, and go to state 116


State 74

   49 MethodInvocation: ID OCURV . AuxMethodInvocation1 CCURV
   50                 | ID OCURV . error CCURV

    error     shift, and go to state 117
    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    CCURV  reduce using rule 52 (AuxMethodInvocation1)

    Assignment            go to state 67
    MethodInvocation      go to state 68
    AuxMethodInvocation1  go to state 118
    ParseArgs             go to state 69
    Expr                  go to state 119


State 75

   48 Assignment: ID ASSIGN . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 120


State 76

   15 MethodBody: OBRACE AuxMethodBody CBRACE .

    $default  reduce using rule 15 (MethodBody)


State 77

   16 AuxMethodBody: VarDecl AuxMethodBody .

    $default  reduce using rule 16 (AuxMethodBody)


State 78

   23 VarDecl: Type ID . auxVarDecl SEMI

    COMMA  shift, and go to state 121

    $default  reduce using rule 25 (auxVarDecl)

    auxVarDecl  go to state 122


State 79

   17 AuxMethodBody: Statement AuxMethodBody .

    $default  reduce using rule 17 (AuxMethodBody)


State 80

   35 Statement: auxStatement1 SEMI .

    $default  reduce using rule 35 (Statement)


State 81

   11 MethodHeader: Type ID OCURV AuxMethodHelper2 . CCURV

    CCURV  shift, and go to state 123


State 82

    8 auxFieldDecl: COMMA ID . auxFieldDecl

    COMMA  shift, and go to state 47

    $default  reduce using rule 9 (auxFieldDecl)

    auxFieldDecl  go to state 124


State 83

    6 FieldDecl: PUBLIC STATIC Type ID auxFieldDecl SEMI .

    $default  reduce using rule 6 (FieldDecl)


State 84

   20 FormalParams: STRING OSQUARE . CSQUARE ID

    CSQUARE  shift, and go to state 125


State 85

   12 MethodHeader: VOID ID OCURV AuxMethodHelper2 CCURV .

    $default  reduce using rule 12 (MethodHeader)


State 86

   19 FormalParams: Type ID . auxFormalParams

    COMMA  shift, and go to state 126

    $default  reduce using rule 22 (auxFormalParams)

    auxFormalParams  go to state 127


State 87

   33 Statement: DO Statement WHILE . OCURV Expr CCURV SEMI

    OCURV  shift, and go to state 128


State 88

   30 Statement: IF OCURV Expr . CCURV Statement ELSE Statement
   31          | IF OCURV Expr . CCURV Statement
   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    CCURV  shift, and go to state 129
    AND    shift, and go to state 101
    OR     shift, and go to state 102
    LT     shift, and go to state 103
    GT     shift, and go to state 104
    EQ     shift, and go to state 105
    NEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113


State 89

   56 ParseArgs: PARSEINT OCURV error . CCURV

    CCURV  shift, and go to state 130


State 90

   55 ParseArgs: PARSEINT OCURV ID . OSQUARE Expr CSQUARE CCURV

    OSQUARE  shift, and go to state 131


State 91

   43 auxStatement2: STRLIT .

    $default  reduce using rule 43 (auxStatement2)


State 92

   34 Statement: PRINT OCURV auxStatement2 . CCURV SEMI

    CCURV  shift, and go to state 132


State 93

   42 auxStatement2: Expr .
   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    AND    shift, and go to state 101
    OR     shift, and go to state 102
    LT     shift, and go to state 103
    GT     shift, and go to state 104
    EQ     shift, and go to state 105
    NEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113

    $default  reduce using rule 42 (auxStatement2)


State 94

   82 Expr: OCURV error . CCURV

    CCURV  shift, and go to state 133


State 95

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr
   78     | OCURV Expr . CCURV

    CCURV  shift, and go to state 134
    AND    shift, and go to state 101
    OR     shift, and go to state 102
    LT     shift, and go to state 103
    GT     shift, and go to state 104
    EQ     shift, and go to state 105
    NEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113


State 96

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr
   73     | PLUS Expr .

    STAR  shift, and go to state 111
    DIV   shift, and go to state 112
    MOD   shift, and go to state 113

    $default  reduce using rule 73 (Expr)


State 97

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr
   74     | MINUS Expr .

    STAR  shift, and go to state 111
    DIV   shift, and go to state 112
    MOD   shift, and go to state 113

    $default  reduce using rule 74 (Expr)


State 98

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr
   75     | NOT Expr .

    $default  reduce using rule 75 (Expr)


State 99

   76 Expr: ID DOTLENGTH .

    $default  reduce using rule 76 (Expr)


State 100

   36 Statement: RETURN auxStatement5 SEMI .

    $default  reduce using rule 36 (Statement)


State 101

   60 Expr: Expr AND . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 135


State 102

   61 Expr: Expr OR . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 136


State 103

   66 Expr: Expr LT . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 137


State 104

   64 Expr: Expr GT . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 138


State 105

   62 Expr: Expr EQ . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 139


State 106

   67 Expr: Expr NEQ . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 140


State 107

   63 Expr: Expr GEQ . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 141


State 108

   65 Expr: Expr LEQ . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 142


State 109

   68 Expr: Expr PLUS . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 143


State 110

   69 Expr: Expr MINUS . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 144


State 111

   70 Expr: Expr STAR . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 145


State 112

   71 Expr: Expr DIV . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 146


State 113

   72 Expr: Expr MOD . Expr

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 147


State 114

   32 Statement: WHILE OCURV Expr . CCURV Statement
   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    CCURV  shift, and go to state 148
    AND    shift, and go to state 101
    OR     shift, and go to state 102
    LT     shift, and go to state 103
    GT     shift, and go to state 104
    EQ     shift, and go to state 105
    NEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113


State 115

   44 auxStatement4: Statement auxStatement4 .

    $default  reduce using rule 44 (auxStatement4)


State 116

   29 Statement: OBRACE auxStatement4 CBRACE .

    $default  reduce using rule 29 (Statement)


State 117

   50 MethodInvocation: ID OCURV error . CCURV

    CCURV  shift, and go to state 149


State 118

   49 MethodInvocation: ID OCURV AuxMethodInvocation1 . CCURV

    CCURV  shift, and go to state 150


State 119

   51 AuxMethodInvocation1: Expr . AuxMethodInvocation2
   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    AND    shift, and go to state 101
    OR     shift, and go to state 102
    LT     shift, and go to state 103
    GT     shift, and go to state 104
    EQ     shift, and go to state 105
    NEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113
    COMMA  shift, and go to state 151

    $default  reduce using rule 54 (AuxMethodInvocation2)

    AuxMethodInvocation2  go to state 152


State 120

   48 Assignment: ID ASSIGN Expr .
   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    AND    shift, and go to state 101
    OR     shift, and go to state 102
    LT     shift, and go to state 103
    GT     shift, and go to state 104
    EQ     shift, and go to state 105
    NEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113

    $default  reduce using rule 48 (Assignment)


State 121

   24 auxVarDecl: COMMA . ID auxVarDecl

    ID  shift, and go to state 153


State 122

   23 VarDecl: Type ID auxVarDecl . SEMI

    SEMI  shift, and go to state 154


State 123

   11 MethodHeader: Type ID OCURV AuxMethodHelper2 CCURV .

    $default  reduce using rule 11 (MethodHeader)


State 124

    8 auxFieldDecl: COMMA ID auxFieldDecl .

    $default  reduce using rule 8 (auxFieldDecl)


State 125

   20 FormalParams: STRING OSQUARE CSQUARE . ID

    ID  shift, and go to state 155


State 126

   21 auxFormalParams: COMMA . Type ID auxFormalParams

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20

    Type  go to state 156


State 127

   19 FormalParams: Type ID auxFormalParams .

    $default  reduce using rule 19 (FormalParams)


State 128

   33 Statement: DO Statement WHILE OCURV . Expr CCURV SEMI

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 157


State 129

   30 Statement: IF OCURV Expr CCURV . Statement ELSE Statement
   31          | IF OCURV Expr CCURV . Statement

    error     shift, and go to state 29
    DO        shift, and go to state 30
    IF        shift, and go to state 31
    PARSEINT  shift, and go to state 32
    PRINT     shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    OBRACE    shift, and go to state 36
    ID        shift, and go to state 37

    SEMI  reduce using rule 41 (auxStatement1)

    Statement         go to state 158
    auxStatement1     go to state 42
    Assignment        go to state 43
    MethodInvocation  go to state 44
    ParseArgs         go to state 45


State 130

   56 ParseArgs: PARSEINT OCURV error CCURV .

    $default  reduce using rule 56 (ParseArgs)


State 131

   55 ParseArgs: PARSEINT OCURV ID OSQUARE . Expr CSQUARE CCURV

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 159


State 132

   34 Statement: PRINT OCURV auxStatement2 CCURV . SEMI

    SEMI  shift, and go to state 160


State 133

   82 Expr: OCURV error CCURV .

    $default  reduce using rule 82 (Expr)


State 134

   78 Expr: OCURV Expr CCURV .

    $default  reduce using rule 78 (Expr)


State 135

   60 Expr: Expr . AND Expr
   60     | Expr AND Expr .
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    LT     shift, and go to state 103
    GT     shift, and go to state 104
    EQ     shift, and go to state 105
    NEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113

    $default  reduce using rule 60 (Expr)


State 136

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   61     | Expr OR Expr .
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    AND    shift, and go to state 101
    LT     shift, and go to state 103
    GT     shift, and go to state 104
    EQ     shift, and go to state 105
    NEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113

    $default  reduce using rule 61 (Expr)


State 137

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   66     | Expr LT Expr .
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113

    $default  reduce using rule 66 (Expr)


State 138

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   64     | Expr GT Expr .
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113

    $default  reduce using rule 64 (Expr)


State 139

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   62     | Expr EQ Expr .
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    LT     shift, and go to state 103
    GT     shift, and go to state 104
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113

    $default  reduce using rule 62 (Expr)


State 140

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   67     | Expr NEQ Expr .
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    LT     shift, and go to state 103
    GT     shift, and go to state 104
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113

    $default  reduce using rule 67 (Expr)


State 141

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   63     | Expr GEQ Expr .
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113

    $default  reduce using rule 63 (Expr)


State 142

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   65     | Expr LEQ Expr .
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113

    $default  reduce using rule 65 (Expr)


State 143

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   68     | Expr PLUS Expr .
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    STAR  shift, and go to state 111
    DIV   shift, and go to state 112
    MOD   shift, and go to state 113

    $default  reduce using rule 68 (Expr)


State 144

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   69     | Expr MINUS Expr .
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    STAR  shift, and go to state 111
    DIV   shift, and go to state 112
    MOD   shift, and go to state 113

    $default  reduce using rule 69 (Expr)


State 145

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   70     | Expr STAR Expr .
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    $default  reduce using rule 70 (Expr)


State 146

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   71     | Expr DIV Expr .
   72     | Expr . MOD Expr

    $default  reduce using rule 71 (Expr)


State 147

   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr
   72     | Expr MOD Expr .

    $default  reduce using rule 72 (Expr)


State 148

   32 Statement: WHILE OCURV Expr CCURV . Statement

    error     shift, and go to state 29
    DO        shift, and go to state 30
    IF        shift, and go to state 31
    PARSEINT  shift, and go to state 32
    PRINT     shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    OBRACE    shift, and go to state 36
    ID        shift, and go to state 37

    SEMI  reduce using rule 41 (auxStatement1)

    Statement         go to state 161
    auxStatement1     go to state 42
    Assignment        go to state 43
    MethodInvocation  go to state 44
    ParseArgs         go to state 45


State 149

   50 MethodInvocation: ID OCURV error CCURV .

    $default  reduce using rule 50 (MethodInvocation)


State 150

   49 MethodInvocation: ID OCURV AuxMethodInvocation1 CCURV .

    $default  reduce using rule 49 (MethodInvocation)


State 151

   53 AuxMethodInvocation2: COMMA . Expr AuxMethodInvocation2

    PARSEINT  shift, and go to state 32
    OCURV     shift, and go to state 58
    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    NOT       shift, and go to state 61
    REALLIT   shift, and go to state 62
    DECLIT    shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    ID        shift, and go to state 65

    Assignment        go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 162


State 152

   51 AuxMethodInvocation1: Expr AuxMethodInvocation2 .

    $default  reduce using rule 51 (AuxMethodInvocation1)


State 153

   24 auxVarDecl: COMMA ID . auxVarDecl

    COMMA  shift, and go to state 121

    $default  reduce using rule 25 (auxVarDecl)

    auxVarDecl  go to state 163


State 154

   23 VarDecl: Type ID auxVarDecl SEMI .

    $default  reduce using rule 23 (VarDecl)


State 155

   20 FormalParams: STRING OSQUARE CSQUARE ID .

    $default  reduce using rule 20 (FormalParams)


State 156

   21 auxFormalParams: COMMA Type . ID auxFormalParams

    ID  shift, and go to state 164


State 157

   33 Statement: DO Statement WHILE OCURV Expr . CCURV SEMI
   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    CCURV  shift, and go to state 165
    AND    shift, and go to state 101
    OR     shift, and go to state 102
    LT     shift, and go to state 103
    GT     shift, and go to state 104
    EQ     shift, and go to state 105
    NEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113


State 158

   30 Statement: IF OCURV Expr CCURV Statement . ELSE Statement
   31          | IF OCURV Expr CCURV Statement .

    ELSE  shift, and go to state 166

    $default  reduce using rule 31 (Statement)


State 159

   55 ParseArgs: PARSEINT OCURV ID OSQUARE Expr . CSQUARE CCURV
   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    CSQUARE  shift, and go to state 167
    AND      shift, and go to state 101
    OR       shift, and go to state 102
    LT       shift, and go to state 103
    GT       shift, and go to state 104
    EQ       shift, and go to state 105
    NEQ      shift, and go to state 106
    GEQ      shift, and go to state 107
    LEQ      shift, and go to state 108
    PLUS     shift, and go to state 109
    MINUS    shift, and go to state 110
    STAR     shift, and go to state 111
    DIV      shift, and go to state 112
    MOD      shift, and go to state 113


State 160

   34 Statement: PRINT OCURV auxStatement2 CCURV SEMI .

    $default  reduce using rule 34 (Statement)


State 161

   32 Statement: WHILE OCURV Expr CCURV Statement .

    $default  reduce using rule 32 (Statement)


State 162

   53 AuxMethodInvocation2: COMMA Expr . AuxMethodInvocation2
   60 Expr: Expr . AND Expr
   61     | Expr . OR Expr
   62     | Expr . EQ Expr
   63     | Expr . GEQ Expr
   64     | Expr . GT Expr
   65     | Expr . LEQ Expr
   66     | Expr . LT Expr
   67     | Expr . NEQ Expr
   68     | Expr . PLUS Expr
   69     | Expr . MINUS Expr
   70     | Expr . STAR Expr
   71     | Expr . DIV Expr
   72     | Expr . MOD Expr

    AND    shift, and go to state 101
    OR     shift, and go to state 102
    LT     shift, and go to state 103
    GT     shift, and go to state 104
    EQ     shift, and go to state 105
    NEQ    shift, and go to state 106
    GEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    PLUS   shift, and go to state 109
    MINUS  shift, and go to state 110
    STAR   shift, and go to state 111
    DIV    shift, and go to state 112
    MOD    shift, and go to state 113
    COMMA  shift, and go to state 151

    $default  reduce using rule 54 (AuxMethodInvocation2)

    AuxMethodInvocation2  go to state 168


State 163

   24 auxVarDecl: COMMA ID auxVarDecl .

    $default  reduce using rule 24 (auxVarDecl)


State 164

   21 auxFormalParams: COMMA Type ID . auxFormalParams

    COMMA  shift, and go to state 126

    $default  reduce using rule 22 (auxFormalParams)

    auxFormalParams  go to state 169


State 165

   33 Statement: DO Statement WHILE OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 170


State 166

   30 Statement: IF OCURV Expr CCURV Statement ELSE . Statement

    error     shift, and go to state 29
    DO        shift, and go to state 30
    IF        shift, and go to state 31
    PARSEINT  shift, and go to state 32
    PRINT     shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    OBRACE    shift, and go to state 36
    ID        shift, and go to state 37

    SEMI  reduce using rule 41 (auxStatement1)

    Statement         go to state 171
    auxStatement1     go to state 42
    Assignment        go to state 43
    MethodInvocation  go to state 44
    ParseArgs         go to state 45


State 167

   55 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE . CCURV

    CCURV  shift, and go to state 172


State 168

   53 AuxMethodInvocation2: COMMA Expr AuxMethodInvocation2 .

    $default  reduce using rule 53 (AuxMethodInvocation2)


State 169

   21 auxFormalParams: COMMA Type ID auxFormalParams .

    $default  reduce using rule 21 (auxFormalParams)


State 170

   33 Statement: DO Statement WHILE OCURV Expr CCURV SEMI .

    $default  reduce using rule 33 (Statement)


State 171

   30 Statement: IF OCURV Expr CCURV Statement ELSE Statement .

    $default  reduce using rule 30 (Statement)


State 172

   55 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV .

    $default  reduce using rule 55 (ParseArgs)
