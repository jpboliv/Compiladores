Terminals unused in grammar

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: auxProgram CBRACE

    2 auxProgram: CLASS ID OBRACE
    3           | auxProgram FieldDecl
    4           | auxProgram MethodDecl
    5           | auxProgram SEMI

    6 FieldDecl: PUBLIC STATIC auxFieldDecl SEMI
    7          | error SEMI

    8 auxFieldDecl: Type ID
    9             | auxFieldDecl COMMA ID

   10 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

   11 MethodHeader: Type ID OCURV FormalParams CCURV
   12             | VOID ID OCURV FormalParams CCURV

   13 MethodBody: OBRACE AuxMethodBody CBRACE

   14 AuxMethodBody: %empty
   15              | VarDecl AuxMethodBody
   16              | Statement AuxMethodBody

   17 FormalParams: Type ID auxFormalParams
   18             | STRING OSQUARE CSQUARE ID
   19             | %empty

   20 auxFormalParams: COMMA Type ID auxFormalParams
   21                | %empty

   22 VarDecl: auxVarDecl SEMI

   23 auxVarDecl: Type ID
   24           | auxVarDecl COMMA ID

   25 Type: BOOL
   26     | INT
   27     | DOUBLE

   28 Statement: OBRACE auxStatement4 CBRACE
   29          | IF OCURV Expr CCURV Statement ELSE Statement
   30          | IF OCURV Expr CCURV Statement
   31          | WHILE OCURV Expr CCURV Statement
   32          | DO Statement WHILE OCURV Expr CCURV SEMI
   33          | PRINT OCURV auxStatement2 CCURV SEMI
   34          | auxStatement1 SEMI
   35          | RETURN auxStatement5 SEMI
   36          | error SEMI

   37 auxStatement1: Assignment
   38              | MethodInvocation
   39              | ParseArgs
   40              | %empty

   41 auxStatement2: Expr
   42              | STRLIT

   43 auxStatement4: Statement auxStatement4
   44              | %empty

   45 auxStatement5: Expr
   46              | %empty

   47 Assignment: ID ASSIGN Expr

   48 MethodInvocation: ID OCURV AuxMethodInvocation1 CCURV
   49                 | ID OCURV error CCURV

   50 AuxMethodInvocation1: Expr AuxMethodInvocation2
   51                     | %empty

   52 AuxMethodInvocation2: COMMA Expr AuxMethodInvocation2
   53                     | %empty

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV
   55          | PARSEINT OCURV error CCURV

   56 Expr: Assignment
   57     | auxExpr

   58 auxExpr: MethodInvocation
   59        | ParseArgs
   60        | auxExpr AND auxExpr
   61        | auxExpr OR auxExpr
   62        | auxExpr EQ auxExpr
   63        | auxExpr GEQ auxExpr
   64        | auxExpr GT auxExpr
   65        | auxExpr LEQ auxExpr
   66        | auxExpr LT auxExpr
   67        | auxExpr NEQ auxExpr
   68        | auxExpr PLUS auxExpr
   69        | auxExpr MINUS auxExpr
   70        | auxExpr STAR auxExpr
   71        | auxExpr DIV auxExpr
   72        | auxExpr MOD auxExpr
   73        | PLUS auxExpr
   74        | MINUS auxExpr
   75        | NOT auxExpr
   76        | ID DOTLENGTH
   77        | ID
   78        | OCURV Expr CCURV
   79        | BOOLLIT
   80        | DECLIT
   81        | REALLIT
   82        | OCURV error CCURV


Terminals, with rules where they appear

$end (0) 0
error (256) 7 36 49 55 82
BOOL (258) 25
CLASS (259) 2
DO (260) 32
DOTLENGTH (261) 76
DOUBLE (262) 27
ELSE (263) 29
IF (264) 29 30
INT (265) 26
PARSEINT (266) 54 55
PRINT (267) 33
PUBLIC (268) 6 10
RETURN (269) 35
STATIC (270) 6 10
STRING (271) 18
VOID (272) 12
WHILE (273) 31 32
OCURV (274) 11 12 29 30 31 32 33 48 49 54 55 78 82
CCURV (275) 11 12 29 30 31 32 33 48 49 54 55 78 82
OBRACE (276) 2 13 28
CBRACE (277) 1 13 28
OSQUARE (278) 18 54
CSQUARE (279) 18 54
AND (280) 60
OR (281) 61
LT (282) 66
GT (283) 64
EQ (284) 62
NEQ (285) 67
GEQ (286) 63
LEQ (287) 65
PLUS (288) 68 73
MINUS (289) 69 74
STAR (290) 70
DIV (291) 71
MOD (292) 72
NOT (293) 75
ASSIGN (294) 47
SEMI (295) 5 6 7 22 32 33 34 35 36
COMMA (296) 9 20 24 52
REALLIT (297) 81
DECLIT (298) 80
BOOLLIT (299) 79
ID (300) 2 8 9 11 12 17 18 20 23 24 47 48 49 54 76 77
STRLIT (301) 42
RESERVED (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
auxProgram (50)
    on left: 2 3 4 5, on right: 1 3 4 5
FieldDecl (51)
    on left: 6 7, on right: 3
auxFieldDecl (52)
    on left: 8 9, on right: 6 9
MethodDecl (53)
    on left: 10, on right: 4
MethodHeader (54)
    on left: 11 12, on right: 10
MethodBody (55)
    on left: 13, on right: 10
AuxMethodBody (56)
    on left: 14 15 16, on right: 13 15 16
FormalParams (57)
    on left: 17 18 19, on right: 11 12
auxFormalParams (58)
    on left: 20 21, on right: 17 20
VarDecl (59)
    on left: 22, on right: 15
auxVarDecl (60)
    on left: 23 24, on right: 22 24
Type (61)
    on left: 25 26 27, on right: 8 11 17 20 23
Statement (62)
    on left: 28 29 30 31 32 33 34 35 36, on right: 16 29 30 31 32 43
auxStatement1 (63)
    on left: 37 38 39 40, on right: 34
auxStatement2 (64)
    on left: 41 42, on right: 33
auxStatement4 (65)
    on left: 43 44, on right: 28 43
auxStatement5 (66)
    on left: 45 46, on right: 35
Assignment (67)
    on left: 47, on right: 37 56
MethodInvocation (68)
    on left: 48 49, on right: 38 58
AuxMethodInvocation1 (69)
    on left: 50 51, on right: 48
AuxMethodInvocation2 (70)
    on left: 52 53, on right: 50 52
ParseArgs (71)
    on left: 54 55, on right: 39 59
Expr (72)
    on left: 56 57, on right: 29 30 31 32 41 45 47 50 52 54 78
auxExpr (73)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
    76 77 78 79 80 81 82, on right: 57 60 61 62 63 64 65 66 67 68 69
    70 71 72 73 74 75


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program     go to state 2
    auxProgram  go to state 3


State 1

    2 auxProgram: CLASS . ID OBRACE

    ID  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: auxProgram . CBRACE
    3 auxProgram: auxProgram . FieldDecl
    4           | auxProgram . MethodDecl
    5           | auxProgram . SEMI

    error   shift, and go to state 6
    PUBLIC  shift, and go to state 7
    CBRACE  shift, and go to state 8
    SEMI    shift, and go to state 9

    FieldDecl   go to state 10
    MethodDecl  go to state 11


State 4

    2 auxProgram: CLASS ID . OBRACE

    OBRACE  shift, and go to state 12


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    7 FieldDecl: error . SEMI

    SEMI  shift, and go to state 13


State 7

    6 FieldDecl: PUBLIC . STATIC auxFieldDecl SEMI
   10 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody

    STATIC  shift, and go to state 14


State 8

    1 Program: auxProgram CBRACE .

    $default  reduce using rule 1 (Program)


State 9

    5 auxProgram: auxProgram SEMI .

    $default  reduce using rule 5 (auxProgram)


State 10

    3 auxProgram: auxProgram FieldDecl .

    $default  reduce using rule 3 (auxProgram)


State 11

    4 auxProgram: auxProgram MethodDecl .

    $default  reduce using rule 4 (auxProgram)


State 12

    2 auxProgram: CLASS ID OBRACE .

    $default  reduce using rule 2 (auxProgram)


State 13

    7 FieldDecl: error SEMI .

    $default  reduce using rule 7 (FieldDecl)


State 14

    6 FieldDecl: PUBLIC STATIC . auxFieldDecl SEMI
   10 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17
    VOID    shift, and go to state 18

    auxFieldDecl  go to state 19
    MethodHeader  go to state 20
    Type          go to state 21


State 15

   25 Type: BOOL .

    $default  reduce using rule 25 (Type)


State 16

   27 Type: DOUBLE .

    $default  reduce using rule 27 (Type)


State 17

   26 Type: INT .

    $default  reduce using rule 26 (Type)


State 18

   12 MethodHeader: VOID . ID OCURV FormalParams CCURV

    ID  shift, and go to state 22


State 19

    6 FieldDecl: PUBLIC STATIC auxFieldDecl . SEMI
    9 auxFieldDecl: auxFieldDecl . COMMA ID

    SEMI   shift, and go to state 23
    COMMA  shift, and go to state 24


State 20

   10 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    OBRACE  shift, and go to state 25

    MethodBody  go to state 26


State 21

    8 auxFieldDecl: Type . ID
   11 MethodHeader: Type . ID OCURV FormalParams CCURV

    ID  shift, and go to state 27


State 22

   12 MethodHeader: VOID ID . OCURV FormalParams CCURV

    OCURV  shift, and go to state 28


State 23

    6 FieldDecl: PUBLIC STATIC auxFieldDecl SEMI .

    $default  reduce using rule 6 (FieldDecl)


State 24

    9 auxFieldDecl: auxFieldDecl COMMA . ID

    ID  shift, and go to state 29


State 25

   13 MethodBody: OBRACE . AuxMethodBody CBRACE

    error     shift, and go to state 30
    BOOL      shift, and go to state 15
    DO        shift, and go to state 31
    DOUBLE    shift, and go to state 16
    IF        shift, and go to state 32
    INT       shift, and go to state 17
    PARSEINT  shift, and go to state 33
    PRINT     shift, and go to state 34
    RETURN    shift, and go to state 35
    WHILE     shift, and go to state 36
    OBRACE    shift, and go to state 37
    ID        shift, and go to state 38

    CBRACE  reduce using rule 14 (AuxMethodBody)
    SEMI    reduce using rule 40 (auxStatement1)

    AuxMethodBody     go to state 39
    VarDecl           go to state 40
    auxVarDecl        go to state 41
    Type              go to state 42
    Statement         go to state 43
    auxStatement1     go to state 44
    Assignment        go to state 45
    MethodInvocation  go to state 46
    ParseArgs         go to state 47


State 26

   10 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 10 (MethodDecl)


State 27

    8 auxFieldDecl: Type ID .
   11 MethodHeader: Type ID . OCURV FormalParams CCURV

    OCURV  shift, and go to state 48

    $default  reduce using rule 8 (auxFieldDecl)


State 28

   12 MethodHeader: VOID ID OCURV . FormalParams CCURV

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 49

    $default  reduce using rule 19 (FormalParams)

    FormalParams  go to state 50
    Type          go to state 51


State 29

    9 auxFieldDecl: auxFieldDecl COMMA ID .

    $default  reduce using rule 9 (auxFieldDecl)


State 30

   36 Statement: error . SEMI

    SEMI  shift, and go to state 52


State 31

   32 Statement: DO . Statement WHILE OCURV Expr CCURV SEMI

    error     shift, and go to state 30
    DO        shift, and go to state 31
    IF        shift, and go to state 32
    PARSEINT  shift, and go to state 33
    PRINT     shift, and go to state 34
    RETURN    shift, and go to state 35
    WHILE     shift, and go to state 36
    OBRACE    shift, and go to state 37
    ID        shift, and go to state 38

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 53
    auxStatement1     go to state 44
    Assignment        go to state 45
    MethodInvocation  go to state 46
    ParseArgs         go to state 47


State 32

   29 Statement: IF . OCURV Expr CCURV Statement ELSE Statement
   30          | IF . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 54


State 33

   54 ParseArgs: PARSEINT . OCURV ID OSQUARE Expr CSQUARE CCURV
   55          | PARSEINT . OCURV error CCURV

    OCURV  shift, and go to state 55


State 34

   33 Statement: PRINT . OCURV auxStatement2 CCURV SEMI

    OCURV  shift, and go to state 56


State 35

   35 Statement: RETURN . auxStatement5 SEMI

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 64

    $default  reduce using rule 46 (auxStatement5)

    auxStatement5     go to state 65
    Assignment        go to state 66
    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Expr              go to state 69
    auxExpr           go to state 70


State 36

   31 Statement: WHILE . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 71


State 37

   28 Statement: OBRACE . auxStatement4 CBRACE

    error     shift, and go to state 30
    DO        shift, and go to state 31
    IF        shift, and go to state 32
    PARSEINT  shift, and go to state 33
    PRINT     shift, and go to state 34
    RETURN    shift, and go to state 35
    WHILE     shift, and go to state 36
    OBRACE    shift, and go to state 37
    ID        shift, and go to state 38

    CBRACE  reduce using rule 44 (auxStatement4)
    SEMI    reduce using rule 40 (auxStatement1)

    Statement         go to state 72
    auxStatement1     go to state 44
    auxStatement4     go to state 73
    Assignment        go to state 45
    MethodInvocation  go to state 46
    ParseArgs         go to state 47


State 38

   47 Assignment: ID . ASSIGN Expr
   48 MethodInvocation: ID . OCURV AuxMethodInvocation1 CCURV
   49                 | ID . OCURV error CCURV

    OCURV   shift, and go to state 74
    ASSIGN  shift, and go to state 75


State 39

   13 MethodBody: OBRACE AuxMethodBody . CBRACE

    CBRACE  shift, and go to state 76


State 40

   15 AuxMethodBody: VarDecl . AuxMethodBody

    error     shift, and go to state 30
    BOOL      shift, and go to state 15
    DO        shift, and go to state 31
    DOUBLE    shift, and go to state 16
    IF        shift, and go to state 32
    INT       shift, and go to state 17
    PARSEINT  shift, and go to state 33
    PRINT     shift, and go to state 34
    RETURN    shift, and go to state 35
    WHILE     shift, and go to state 36
    OBRACE    shift, and go to state 37
    ID        shift, and go to state 38

    CBRACE  reduce using rule 14 (AuxMethodBody)
    SEMI    reduce using rule 40 (auxStatement1)

    AuxMethodBody     go to state 77
    VarDecl           go to state 40
    auxVarDecl        go to state 41
    Type              go to state 42
    Statement         go to state 43
    auxStatement1     go to state 44
    Assignment        go to state 45
    MethodInvocation  go to state 46
    ParseArgs         go to state 47


State 41

   22 VarDecl: auxVarDecl . SEMI
   24 auxVarDecl: auxVarDecl . COMMA ID

    SEMI   shift, and go to state 78
    COMMA  shift, and go to state 79


State 42

   23 auxVarDecl: Type . ID

    ID  shift, and go to state 80


State 43

   16 AuxMethodBody: Statement . AuxMethodBody

    error     shift, and go to state 30
    BOOL      shift, and go to state 15
    DO        shift, and go to state 31
    DOUBLE    shift, and go to state 16
    IF        shift, and go to state 32
    INT       shift, and go to state 17
    PARSEINT  shift, and go to state 33
    PRINT     shift, and go to state 34
    RETURN    shift, and go to state 35
    WHILE     shift, and go to state 36
    OBRACE    shift, and go to state 37
    ID        shift, and go to state 38

    CBRACE  reduce using rule 14 (AuxMethodBody)
    SEMI    reduce using rule 40 (auxStatement1)

    AuxMethodBody     go to state 81
    VarDecl           go to state 40
    auxVarDecl        go to state 41
    Type              go to state 42
    Statement         go to state 43
    auxStatement1     go to state 44
    Assignment        go to state 45
    MethodInvocation  go to state 46
    ParseArgs         go to state 47


State 44

   34 Statement: auxStatement1 . SEMI

    SEMI  shift, and go to state 82


State 45

   37 auxStatement1: Assignment .

    $default  reduce using rule 37 (auxStatement1)


State 46

   38 auxStatement1: MethodInvocation .

    $default  reduce using rule 38 (auxStatement1)


State 47

   39 auxStatement1: ParseArgs .

    $default  reduce using rule 39 (auxStatement1)


State 48

   11 MethodHeader: Type ID OCURV . FormalParams CCURV

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 49

    $default  reduce using rule 19 (FormalParams)

    FormalParams  go to state 83
    Type          go to state 51


State 49

   18 FormalParams: STRING . OSQUARE CSQUARE ID

    OSQUARE  shift, and go to state 84


State 50

   12 MethodHeader: VOID ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 85


State 51

   17 FormalParams: Type . ID auxFormalParams

    ID  shift, and go to state 86


State 52

   36 Statement: error SEMI .

    $default  reduce using rule 36 (Statement)


State 53

   32 Statement: DO Statement . WHILE OCURV Expr CCURV SEMI

    WHILE  shift, and go to state 87


State 54

   29 Statement: IF OCURV . Expr CCURV Statement ELSE Statement
   30          | IF OCURV . Expr CCURV Statement

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 64

    Assignment        go to state 66
    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Expr              go to state 88
    auxExpr           go to state 70


State 55

   54 ParseArgs: PARSEINT OCURV . ID OSQUARE Expr CSQUARE CCURV
   55          | PARSEINT OCURV . error CCURV

    error  shift, and go to state 89
    ID     shift, and go to state 90


State 56

   33 Statement: PRINT OCURV . auxStatement2 CCURV SEMI

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 64
    STRLIT    shift, and go to state 91

    auxStatement2     go to state 92
    Assignment        go to state 66
    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Expr              go to state 93
    auxExpr           go to state 70


State 57

   78 auxExpr: OCURV . Expr CCURV
   82        | OCURV . error CCURV

    error     shift, and go to state 94
    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 64

    Assignment        go to state 66
    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Expr              go to state 95
    auxExpr           go to state 70


State 58

   73 auxExpr: PLUS . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 97


State 59

   74 auxExpr: MINUS . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 98


State 60

   75 auxExpr: NOT . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 99


State 61

   81 auxExpr: REALLIT .

    $default  reduce using rule 81 (auxExpr)


State 62

   80 auxExpr: DECLIT .

    $default  reduce using rule 80 (auxExpr)


State 63

   79 auxExpr: BOOLLIT .

    $default  reduce using rule 79 (auxExpr)


State 64

   47 Assignment: ID . ASSIGN Expr
   48 MethodInvocation: ID . OCURV AuxMethodInvocation1 CCURV
   49                 | ID . OCURV error CCURV
   76 auxExpr: ID . DOTLENGTH
   77        | ID .

    DOTLENGTH  shift, and go to state 100
    OCURV      shift, and go to state 74
    ASSIGN     shift, and go to state 75

    $default  reduce using rule 77 (auxExpr)


State 65

   35 Statement: RETURN auxStatement5 . SEMI

    SEMI  shift, and go to state 101


State 66

   56 Expr: Assignment .

    $default  reduce using rule 56 (Expr)


State 67

   58 auxExpr: MethodInvocation .

    $default  reduce using rule 58 (auxExpr)


State 68

   59 auxExpr: ParseArgs .

    $default  reduce using rule 59 (auxExpr)


State 69

   45 auxStatement5: Expr .

    $default  reduce using rule 45 (auxStatement5)


State 70

   57 Expr: auxExpr .
   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    GEQ    shift, and go to state 108
    LEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 57 (Expr)


State 71

   31 Statement: WHILE OCURV . Expr CCURV Statement

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 64

    Assignment        go to state 66
    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Expr              go to state 115
    auxExpr           go to state 70


State 72

   43 auxStatement4: Statement . auxStatement4

    error     shift, and go to state 30
    DO        shift, and go to state 31
    IF        shift, and go to state 32
    PARSEINT  shift, and go to state 33
    PRINT     shift, and go to state 34
    RETURN    shift, and go to state 35
    WHILE     shift, and go to state 36
    OBRACE    shift, and go to state 37
    ID        shift, and go to state 38

    CBRACE  reduce using rule 44 (auxStatement4)
    SEMI    reduce using rule 40 (auxStatement1)

    Statement         go to state 72
    auxStatement1     go to state 44
    auxStatement4     go to state 116
    Assignment        go to state 45
    MethodInvocation  go to state 46
    ParseArgs         go to state 47


State 73

   28 Statement: OBRACE auxStatement4 . CBRACE

    CBRACE  shift, and go to state 117


State 74

   48 MethodInvocation: ID OCURV . AuxMethodInvocation1 CCURV
   49                 | ID OCURV . error CCURV

    error     shift, and go to state 118
    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 64

    CCURV  reduce using rule 51 (AuxMethodInvocation1)

    Assignment            go to state 66
    MethodInvocation      go to state 67
    AuxMethodInvocation1  go to state 119
    ParseArgs             go to state 68
    Expr                  go to state 120
    auxExpr               go to state 70


State 75

   47 Assignment: ID ASSIGN . Expr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 64

    Assignment        go to state 66
    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Expr              go to state 121
    auxExpr           go to state 70


State 76

   13 MethodBody: OBRACE AuxMethodBody CBRACE .

    $default  reduce using rule 13 (MethodBody)


State 77

   15 AuxMethodBody: VarDecl AuxMethodBody .

    $default  reduce using rule 15 (AuxMethodBody)


State 78

   22 VarDecl: auxVarDecl SEMI .

    $default  reduce using rule 22 (VarDecl)


State 79

   24 auxVarDecl: auxVarDecl COMMA . ID

    ID  shift, and go to state 122


State 80

   23 auxVarDecl: Type ID .

    $default  reduce using rule 23 (auxVarDecl)


State 81

   16 AuxMethodBody: Statement AuxMethodBody .

    $default  reduce using rule 16 (AuxMethodBody)


State 82

   34 Statement: auxStatement1 SEMI .

    $default  reduce using rule 34 (Statement)


State 83

   11 MethodHeader: Type ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 123


State 84

   18 FormalParams: STRING OSQUARE . CSQUARE ID

    CSQUARE  shift, and go to state 124


State 85

   12 MethodHeader: VOID ID OCURV FormalParams CCURV .

    $default  reduce using rule 12 (MethodHeader)


State 86

   17 FormalParams: Type ID . auxFormalParams

    COMMA  shift, and go to state 125

    $default  reduce using rule 21 (auxFormalParams)

    auxFormalParams  go to state 126


State 87

   32 Statement: DO Statement WHILE . OCURV Expr CCURV SEMI

    OCURV  shift, and go to state 127


State 88

   29 Statement: IF OCURV Expr . CCURV Statement ELSE Statement
   30          | IF OCURV Expr . CCURV Statement

    CCURV  shift, and go to state 128


State 89

   55 ParseArgs: PARSEINT OCURV error . CCURV

    CCURV  shift, and go to state 129


State 90

   54 ParseArgs: PARSEINT OCURV ID . OSQUARE Expr CSQUARE CCURV

    OSQUARE  shift, and go to state 130


State 91

   42 auxStatement2: STRLIT .

    $default  reduce using rule 42 (auxStatement2)


State 92

   33 Statement: PRINT OCURV auxStatement2 . CCURV SEMI

    CCURV  shift, and go to state 131


State 93

   41 auxStatement2: Expr .

    $default  reduce using rule 41 (auxStatement2)


State 94

   82 auxExpr: OCURV error . CCURV

    CCURV  shift, and go to state 132


State 95

   78 auxExpr: OCURV Expr . CCURV

    CCURV  shift, and go to state 133


State 96

   48 MethodInvocation: ID . OCURV AuxMethodInvocation1 CCURV
   49                 | ID . OCURV error CCURV
   76 auxExpr: ID . DOTLENGTH
   77        | ID .

    DOTLENGTH  shift, and go to state 100
    OCURV      shift, and go to state 74

    $default  reduce using rule 77 (auxExpr)


State 97

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr
   73        | PLUS auxExpr .

    STAR  shift, and go to state 112
    DIV   shift, and go to state 113
    MOD   shift, and go to state 114

    $default  reduce using rule 73 (auxExpr)


State 98

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr
   74        | MINUS auxExpr .

    STAR  shift, and go to state 112
    DIV   shift, and go to state 113
    MOD   shift, and go to state 114

    $default  reduce using rule 74 (auxExpr)


State 99

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr
   75        | NOT auxExpr .

    $default  reduce using rule 75 (auxExpr)


State 100

   76 auxExpr: ID DOTLENGTH .

    $default  reduce using rule 76 (auxExpr)


State 101

   35 Statement: RETURN auxStatement5 SEMI .

    $default  reduce using rule 35 (Statement)


State 102

   60 auxExpr: auxExpr AND . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 134


State 103

   61 auxExpr: auxExpr OR . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 135


State 104

   66 auxExpr: auxExpr LT . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 136


State 105

   64 auxExpr: auxExpr GT . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 137


State 106

   62 auxExpr: auxExpr EQ . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 138


State 107

   67 auxExpr: auxExpr NEQ . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 139


State 108

   63 auxExpr: auxExpr GEQ . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 140


State 109

   65 auxExpr: auxExpr LEQ . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 141


State 110

   68 auxExpr: auxExpr PLUS . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 142


State 111

   69 auxExpr: auxExpr MINUS . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 143


State 112

   70 auxExpr: auxExpr STAR . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 144


State 113

   71 auxExpr: auxExpr DIV . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 145


State 114

   72 auxExpr: auxExpr MOD . auxExpr

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 96

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    auxExpr           go to state 146


State 115

   31 Statement: WHILE OCURV Expr . CCURV Statement

    CCURV  shift, and go to state 147


State 116

   43 auxStatement4: Statement auxStatement4 .

    $default  reduce using rule 43 (auxStatement4)


State 117

   28 Statement: OBRACE auxStatement4 CBRACE .

    $default  reduce using rule 28 (Statement)


State 118

   49 MethodInvocation: ID OCURV error . CCURV

    CCURV  shift, and go to state 148


State 119

   48 MethodInvocation: ID OCURV AuxMethodInvocation1 . CCURV

    CCURV  shift, and go to state 149


State 120

   50 AuxMethodInvocation1: Expr . AuxMethodInvocation2

    COMMA  shift, and go to state 150

    $default  reduce using rule 53 (AuxMethodInvocation2)

    AuxMethodInvocation2  go to state 151


State 121

   47 Assignment: ID ASSIGN Expr .

    $default  reduce using rule 47 (Assignment)


State 122

   24 auxVarDecl: auxVarDecl COMMA ID .

    $default  reduce using rule 24 (auxVarDecl)


State 123

   11 MethodHeader: Type ID OCURV FormalParams CCURV .

    $default  reduce using rule 11 (MethodHeader)


State 124

   18 FormalParams: STRING OSQUARE CSQUARE . ID

    ID  shift, and go to state 152


State 125

   20 auxFormalParams: COMMA . Type ID auxFormalParams

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17

    Type  go to state 153


State 126

   17 FormalParams: Type ID auxFormalParams .

    $default  reduce using rule 17 (FormalParams)


State 127

   32 Statement: DO Statement WHILE OCURV . Expr CCURV SEMI

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 64

    Assignment        go to state 66
    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Expr              go to state 154
    auxExpr           go to state 70


State 128

   29 Statement: IF OCURV Expr CCURV . Statement ELSE Statement
   30          | IF OCURV Expr CCURV . Statement

    error     shift, and go to state 30
    DO        shift, and go to state 31
    IF        shift, and go to state 32
    PARSEINT  shift, and go to state 33
    PRINT     shift, and go to state 34
    RETURN    shift, and go to state 35
    WHILE     shift, and go to state 36
    OBRACE    shift, and go to state 37
    ID        shift, and go to state 38

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 155
    auxStatement1     go to state 44
    Assignment        go to state 45
    MethodInvocation  go to state 46
    ParseArgs         go to state 47


State 129

   55 ParseArgs: PARSEINT OCURV error CCURV .

    $default  reduce using rule 55 (ParseArgs)


State 130

   54 ParseArgs: PARSEINT OCURV ID OSQUARE . Expr CSQUARE CCURV

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 64

    Assignment        go to state 66
    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Expr              go to state 156
    auxExpr           go to state 70


State 131

   33 Statement: PRINT OCURV auxStatement2 CCURV . SEMI

    SEMI  shift, and go to state 157


State 132

   82 auxExpr: OCURV error CCURV .

    $default  reduce using rule 82 (auxExpr)


State 133

   78 auxExpr: OCURV Expr CCURV .

    $default  reduce using rule 78 (auxExpr)


State 134

   60 auxExpr: auxExpr . AND auxExpr
   60        | auxExpr AND auxExpr .
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    GEQ    shift, and go to state 108
    LEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 60 (auxExpr)


State 135

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   61        | auxExpr OR auxExpr .
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    AND    shift, and go to state 102
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    GEQ    shift, and go to state 108
    LEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 61 (auxExpr)


State 136

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   66        | auxExpr LT auxExpr .
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 66 (auxExpr)


State 137

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   64        | auxExpr GT auxExpr .
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 64 (auxExpr)


State 138

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   62        | auxExpr EQ auxExpr .
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    LT     shift, and go to state 104
    GT     shift, and go to state 105
    GEQ    shift, and go to state 108
    LEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 62 (auxExpr)


State 139

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   67        | auxExpr NEQ auxExpr .
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    LT     shift, and go to state 104
    GT     shift, and go to state 105
    GEQ    shift, and go to state 108
    LEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 67 (auxExpr)


State 140

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   63        | auxExpr GEQ auxExpr .
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 63 (auxExpr)


State 141

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   65        | auxExpr LEQ auxExpr .
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 65 (auxExpr)


State 142

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   68        | auxExpr PLUS auxExpr .
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    STAR  shift, and go to state 112
    DIV   shift, and go to state 113
    MOD   shift, and go to state 114

    $default  reduce using rule 68 (auxExpr)


State 143

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   69        | auxExpr MINUS auxExpr .
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    STAR  shift, and go to state 112
    DIV   shift, and go to state 113
    MOD   shift, and go to state 114

    $default  reduce using rule 69 (auxExpr)


State 144

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   70        | auxExpr STAR auxExpr .
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr

    $default  reduce using rule 70 (auxExpr)


State 145

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   71        | auxExpr DIV auxExpr .
   72        | auxExpr . MOD auxExpr

    $default  reduce using rule 71 (auxExpr)


State 146

   60 auxExpr: auxExpr . AND auxExpr
   61        | auxExpr . OR auxExpr
   62        | auxExpr . EQ auxExpr
   63        | auxExpr . GEQ auxExpr
   64        | auxExpr . GT auxExpr
   65        | auxExpr . LEQ auxExpr
   66        | auxExpr . LT auxExpr
   67        | auxExpr . NEQ auxExpr
   68        | auxExpr . PLUS auxExpr
   69        | auxExpr . MINUS auxExpr
   70        | auxExpr . STAR auxExpr
   71        | auxExpr . DIV auxExpr
   72        | auxExpr . MOD auxExpr
   72        | auxExpr MOD auxExpr .

    $default  reduce using rule 72 (auxExpr)


State 147

   31 Statement: WHILE OCURV Expr CCURV . Statement

    error     shift, and go to state 30
    DO        shift, and go to state 31
    IF        shift, and go to state 32
    PARSEINT  shift, and go to state 33
    PRINT     shift, and go to state 34
    RETURN    shift, and go to state 35
    WHILE     shift, and go to state 36
    OBRACE    shift, and go to state 37
    ID        shift, and go to state 38

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 158
    auxStatement1     go to state 44
    Assignment        go to state 45
    MethodInvocation  go to state 46
    ParseArgs         go to state 47


State 148

   49 MethodInvocation: ID OCURV error CCURV .

    $default  reduce using rule 49 (MethodInvocation)


State 149

   48 MethodInvocation: ID OCURV AuxMethodInvocation1 CCURV .

    $default  reduce using rule 48 (MethodInvocation)


State 150

   52 AuxMethodInvocation2: COMMA . Expr AuxMethodInvocation2

    PARSEINT  shift, and go to state 33
    OCURV     shift, and go to state 57
    PLUS      shift, and go to state 58
    MINUS     shift, and go to state 59
    NOT       shift, and go to state 60
    REALLIT   shift, and go to state 61
    DECLIT    shift, and go to state 62
    BOOLLIT   shift, and go to state 63
    ID        shift, and go to state 64

    Assignment        go to state 66
    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Expr              go to state 159
    auxExpr           go to state 70


State 151

   50 AuxMethodInvocation1: Expr AuxMethodInvocation2 .

    $default  reduce using rule 50 (AuxMethodInvocation1)


State 152

   18 FormalParams: STRING OSQUARE CSQUARE ID .

    $default  reduce using rule 18 (FormalParams)


State 153

   20 auxFormalParams: COMMA Type . ID auxFormalParams

    ID  shift, and go to state 160


State 154

   32 Statement: DO Statement WHILE OCURV Expr . CCURV SEMI

    CCURV  shift, and go to state 161


State 155

   29 Statement: IF OCURV Expr CCURV Statement . ELSE Statement
   30          | IF OCURV Expr CCURV Statement .

    ELSE  shift, and go to state 162

    $default  reduce using rule 30 (Statement)


State 156

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr . CSQUARE CCURV

    CSQUARE  shift, and go to state 163


State 157

   33 Statement: PRINT OCURV auxStatement2 CCURV SEMI .

    $default  reduce using rule 33 (Statement)


State 158

   31 Statement: WHILE OCURV Expr CCURV Statement .

    $default  reduce using rule 31 (Statement)


State 159

   52 AuxMethodInvocation2: COMMA Expr . AuxMethodInvocation2

    COMMA  shift, and go to state 150

    $default  reduce using rule 53 (AuxMethodInvocation2)

    AuxMethodInvocation2  go to state 164


State 160

   20 auxFormalParams: COMMA Type ID . auxFormalParams

    COMMA  shift, and go to state 125

    $default  reduce using rule 21 (auxFormalParams)

    auxFormalParams  go to state 165


State 161

   32 Statement: DO Statement WHILE OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 166


State 162

   29 Statement: IF OCURV Expr CCURV Statement ELSE . Statement

    error     shift, and go to state 30
    DO        shift, and go to state 31
    IF        shift, and go to state 32
    PARSEINT  shift, and go to state 33
    PRINT     shift, and go to state 34
    RETURN    shift, and go to state 35
    WHILE     shift, and go to state 36
    OBRACE    shift, and go to state 37
    ID        shift, and go to state 38

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 167
    auxStatement1     go to state 44
    Assignment        go to state 45
    MethodInvocation  go to state 46
    ParseArgs         go to state 47


State 163

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE . CCURV

    CCURV  shift, and go to state 168


State 164

   52 AuxMethodInvocation2: COMMA Expr AuxMethodInvocation2 .

    $default  reduce using rule 52 (AuxMethodInvocation2)


State 165

   20 auxFormalParams: COMMA Type ID auxFormalParams .

    $default  reduce using rule 20 (auxFormalParams)


State 166

   32 Statement: DO Statement WHILE OCURV Expr CCURV SEMI .

    $default  reduce using rule 32 (Statement)


State 167

   29 Statement: IF OCURV Expr CCURV Statement ELSE Statement .

    $default  reduce using rule 29 (Statement)


State 168

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV .

    $default  reduce using rule 54 (ParseArgs)
