Terminals unused in grammar

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID OBRACE auxProgram CBRACE

    2 auxProgram: FieldDecl auxProgram
    3           | MethodDecl auxProgram
    4           | SEMI auxProgram
    5           | %empty

    6 FieldDecl: PUBLIC STATIC auxFieldDecl SEMI
    7          | error SEMI

    8 auxFieldDecl: Type ID
    9             | auxFieldDecl COMMA ID

   10 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

   11 MethodHeader: Type ID OCURV FormalParams CCURV
   12             | VOID ID OCURV FormalParams CCURV

   13 MethodBody: OBRACE AuxMethodBody CBRACE

   14 AuxMethodBody: VarDecl AuxMethodBody
   15              | Statement AuxMethodBody
   16              | %empty

   17 FormalParams: Type ID auxFormalParams
   18             | STRING OSQUARE CSQUARE ID
   19             | %empty

   20 auxFormalParams: COMMA Type ID auxFormalParams
   21                | %empty

   22 VarDecl: Type ID auxVarDecl SEMI

   23 auxVarDecl: COMMA ID auxVarDecl
   24           | %empty

   25 Type: BOOL
   26     | INT
   27     | DOUBLE

   28 Statement: OBRACE auxStatement4 CBRACE
   29          | IF OCURV Expr CCURV Statement ELSE Statement
   30          | IF OCURV Expr CCURV Statement
   31          | WHILE OCURV Expr CCURV Statement
   32          | DO Statement WHILE OCURV Expr CCURV SEMI
   33          | PRINT OCURV auxStatement2 CCURV SEMI
   34          | auxStatement1 SEMI
   35          | RETURN auxStatement5 SEMI
   36          | error SEMI

   37 auxStatement1: Assignment
   38              | MethodInvocation
   39              | ParseArgs
   40              | %empty

   41 auxStatement2: Expr
   42              | STRLIT

   43 auxStatement4: Statement auxStatement4
   44              | %empty

   45 auxStatement5: Expr
   46              | %empty

   47 Assignment: ID ASSIGN Expr

   48 MethodInvocation: ID OCURV AuxMethodInvocation1 CCURV
   49                 | ID OCURV error CCURV

   50 AuxMethodInvocation1: Expr AuxMethodInvocation2
   51                     | %empty

   52 AuxMethodInvocation2: COMMA Expr AuxMethodInvocation2
   53                     | %empty

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV
   55          | PARSEINT OCURV error CCURV

   56 Expr: Assignment
   57     | MethodInvocation
   58     | ParseArgs
   59     | Expr AND Expr
   60     | Expr OR Expr
   61     | Expr EQ Expr
   62     | Expr GEQ Expr
   63     | Expr GT Expr
   64     | Expr LEQ Expr
   65     | Expr LT Expr
   66     | Expr NEQ Expr
   67     | Expr PLUS Expr
   68     | Expr MINUS Expr
   69     | Expr STAR Expr
   70     | Expr DIV Expr
   71     | Expr MOD Expr
   72     | PLUS Expr
   73     | MINUS Expr
   74     | NOT Expr
   75     | ID DOTLENGTH
   76     | ID
   77     | OCURV Expr CCURV
   78     | BOOLLIT
   79     | DECLIT
   80     | REALLIT
   81     | OCURV error CCURV


Terminals, with rules where they appear

$end (0) 0
error (256) 7 36 49 55 81
BOOL (258) 25
CLASS (259) 1
DO (260) 32
DOTLENGTH (261) 75
DOUBLE (262) 27
ELSE (263) 29
IF (264) 29 30
INT (265) 26
PARSEINT (266) 54 55
PRINT (267) 33
PUBLIC (268) 6 10
RETURN (269) 35
STATIC (270) 6 10
STRING (271) 18
VOID (272) 12
WHILE (273) 31 32
OCURV (274) 11 12 29 30 31 32 33 48 49 54 55 77 81
CCURV (275) 11 12 29 30 31 32 33 48 49 54 55 77 81
OBRACE (276) 1 13 28
CBRACE (277) 1 13 28
OSQUARE (278) 18 54
CSQUARE (279) 18 54
AND (280) 59
OR (281) 60
LT (282) 65
GT (283) 63
EQ (284) 61
NEQ (285) 66
GEQ (286) 62
LEQ (287) 64
PLUS (288) 67 72
MINUS (289) 68 73
STAR (290) 69
DIV (291) 70
MOD (292) 71
NOT (293) 74
ASSIGN (294) 47
SEMI (295) 4 6 7 22 32 33 34 35 36
COMMA (296) 9 20 23 52
RESERVED (297)
REALLIT (298) 80
DECLIT (299) 79
BOOLLIT (300) 78
ID (301) 1 8 9 11 12 17 18 20 22 23 47 48 49 54 75 76
STRLIT (302) 42


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
auxProgram (50)
    on left: 2 3 4 5, on right: 1 2 3 4
FieldDecl (51)
    on left: 6 7, on right: 2
auxFieldDecl (52)
    on left: 8 9, on right: 6 9
MethodDecl (53)
    on left: 10, on right: 3
MethodHeader (54)
    on left: 11 12, on right: 10
MethodBody (55)
    on left: 13, on right: 10
AuxMethodBody (56)
    on left: 14 15 16, on right: 13 14 15
FormalParams (57)
    on left: 17 18 19, on right: 11 12
auxFormalParams (58)
    on left: 20 21, on right: 17 20
VarDecl (59)
    on left: 22, on right: 14
auxVarDecl (60)
    on left: 23 24, on right: 22 23
Type (61)
    on left: 25 26 27, on right: 8 11 17 20 22
Statement (62)
    on left: 28 29 30 31 32 33 34 35 36, on right: 15 29 30 31 32 43
auxStatement1 (63)
    on left: 37 38 39 40, on right: 34
auxStatement2 (64)
    on left: 41 42, on right: 33
auxStatement4 (65)
    on left: 43 44, on right: 28 43
auxStatement5 (66)
    on left: 45 46, on right: 35
Assignment (67)
    on left: 47, on right: 37 56
MethodInvocation (68)
    on left: 48 49, on right: 38 57
AuxMethodInvocation1 (69)
    on left: 50 51, on right: 48
AuxMethodInvocation2 (70)
    on left: 52 53, on right: 50 52
ParseArgs (71)
    on left: 54 55, on right: 39 58
Expr (72)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
    74 75 76 77 78 79 80 81, on right: 29 30 31 32 41 45 47 50 52 54
    59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 77


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS . ID OBRACE auxProgram CBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID . OBRACE auxProgram CBRACE

    OBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: CLASS ID OBRACE . auxProgram CBRACE

    error   shift, and go to state 6
    PUBLIC  shift, and go to state 7
    SEMI    shift, and go to state 8

    CBRACE  reduce using rule 5 (auxProgram)

    auxProgram  go to state 9
    FieldDecl   go to state 10
    MethodDecl  go to state 11


State 6

    7 FieldDecl: error . SEMI

    SEMI  shift, and go to state 12


State 7

    6 FieldDecl: PUBLIC . STATIC auxFieldDecl SEMI
   10 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody

    STATIC  shift, and go to state 13


State 8

    4 auxProgram: SEMI . auxProgram

    error   shift, and go to state 6
    PUBLIC  shift, and go to state 7
    SEMI    shift, and go to state 8

    CBRACE  reduce using rule 5 (auxProgram)

    auxProgram  go to state 14
    FieldDecl   go to state 10
    MethodDecl  go to state 11


State 9

    1 Program: CLASS ID OBRACE auxProgram . CBRACE

    CBRACE  shift, and go to state 15


State 10

    2 auxProgram: FieldDecl . auxProgram

    error   shift, and go to state 6
    PUBLIC  shift, and go to state 7
    SEMI    shift, and go to state 8

    CBRACE  reduce using rule 5 (auxProgram)

    auxProgram  go to state 16
    FieldDecl   go to state 10
    MethodDecl  go to state 11


State 11

    3 auxProgram: MethodDecl . auxProgram

    error   shift, and go to state 6
    PUBLIC  shift, and go to state 7
    SEMI    shift, and go to state 8

    CBRACE  reduce using rule 5 (auxProgram)

    auxProgram  go to state 17
    FieldDecl   go to state 10
    MethodDecl  go to state 11


State 12

    7 FieldDecl: error SEMI .

    $default  reduce using rule 7 (FieldDecl)


State 13

    6 FieldDecl: PUBLIC STATIC . auxFieldDecl SEMI
   10 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    VOID    shift, and go to state 21

    auxFieldDecl  go to state 22
    MethodHeader  go to state 23
    Type          go to state 24


State 14

    4 auxProgram: SEMI auxProgram .

    $default  reduce using rule 4 (auxProgram)


State 15

    1 Program: CLASS ID OBRACE auxProgram CBRACE .

    $default  reduce using rule 1 (Program)


State 16

    2 auxProgram: FieldDecl auxProgram .

    $default  reduce using rule 2 (auxProgram)


State 17

    3 auxProgram: MethodDecl auxProgram .

    $default  reduce using rule 3 (auxProgram)


State 18

   25 Type: BOOL .

    $default  reduce using rule 25 (Type)


State 19

   27 Type: DOUBLE .

    $default  reduce using rule 27 (Type)


State 20

   26 Type: INT .

    $default  reduce using rule 26 (Type)


State 21

   12 MethodHeader: VOID . ID OCURV FormalParams CCURV

    ID  shift, and go to state 25


State 22

    6 FieldDecl: PUBLIC STATIC auxFieldDecl . SEMI
    9 auxFieldDecl: auxFieldDecl . COMMA ID

    SEMI   shift, and go to state 26
    COMMA  shift, and go to state 27


State 23

   10 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    OBRACE  shift, and go to state 28

    MethodBody  go to state 29


State 24

    8 auxFieldDecl: Type . ID
   11 MethodHeader: Type . ID OCURV FormalParams CCURV

    ID  shift, and go to state 30


State 25

   12 MethodHeader: VOID ID . OCURV FormalParams CCURV

    OCURV  shift, and go to state 31


State 26

    6 FieldDecl: PUBLIC STATIC auxFieldDecl SEMI .

    $default  reduce using rule 6 (FieldDecl)


State 27

    9 auxFieldDecl: auxFieldDecl COMMA . ID

    ID  shift, and go to state 32


State 28

   13 MethodBody: OBRACE . AuxMethodBody CBRACE

    error     shift, and go to state 33
    BOOL      shift, and go to state 18
    DO        shift, and go to state 34
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 35
    INT       shift, and go to state 20
    PARSEINT  shift, and go to state 36
    PRINT     shift, and go to state 37
    RETURN    shift, and go to state 38
    WHILE     shift, and go to state 39
    OBRACE    shift, and go to state 40
    ID        shift, and go to state 41

    CBRACE  reduce using rule 16 (AuxMethodBody)
    SEMI    reduce using rule 40 (auxStatement1)

    AuxMethodBody     go to state 42
    VarDecl           go to state 43
    Type              go to state 44
    Statement         go to state 45
    auxStatement1     go to state 46
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 29

   10 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 10 (MethodDecl)


State 30

    8 auxFieldDecl: Type ID .
   11 MethodHeader: Type ID . OCURV FormalParams CCURV

    OCURV  shift, and go to state 50

    $default  reduce using rule 8 (auxFieldDecl)


State 31

   12 MethodHeader: VOID ID OCURV . FormalParams CCURV

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 51

    $default  reduce using rule 19 (FormalParams)

    FormalParams  go to state 52
    Type          go to state 53


State 32

    9 auxFieldDecl: auxFieldDecl COMMA ID .

    $default  reduce using rule 9 (auxFieldDecl)


State 33

   36 Statement: error . SEMI

    SEMI  shift, and go to state 54


State 34

   32 Statement: DO . Statement WHILE OCURV Expr CCURV SEMI

    error     shift, and go to state 33
    DO        shift, and go to state 34
    IF        shift, and go to state 35
    PARSEINT  shift, and go to state 36
    PRINT     shift, and go to state 37
    RETURN    shift, and go to state 38
    WHILE     shift, and go to state 39
    OBRACE    shift, and go to state 40
    ID        shift, and go to state 41

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 55
    auxStatement1     go to state 46
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 35

   29 Statement: IF . OCURV Expr CCURV Statement ELSE Statement
   30          | IF . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 56


State 36

   54 ParseArgs: PARSEINT . OCURV ID OSQUARE Expr CSQUARE CCURV
   55          | PARSEINT . OCURV error CCURV

    OCURV  shift, and go to state 57


State 37

   33 Statement: PRINT . OCURV auxStatement2 CCURV SEMI

    OCURV  shift, and go to state 58


State 38

   35 Statement: RETURN . auxStatement5 SEMI

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    $default  reduce using rule 46 (auxStatement5)

    auxStatement5     go to state 67
    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 71


State 39

   31 Statement: WHILE . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 72


State 40

   28 Statement: OBRACE . auxStatement4 CBRACE

    error     shift, and go to state 33
    DO        shift, and go to state 34
    IF        shift, and go to state 35
    PARSEINT  shift, and go to state 36
    PRINT     shift, and go to state 37
    RETURN    shift, and go to state 38
    WHILE     shift, and go to state 39
    OBRACE    shift, and go to state 40
    ID        shift, and go to state 41

    CBRACE  reduce using rule 44 (auxStatement4)
    SEMI    reduce using rule 40 (auxStatement1)

    Statement         go to state 73
    auxStatement1     go to state 46
    auxStatement4     go to state 74
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 41

   47 Assignment: ID . ASSIGN Expr
   48 MethodInvocation: ID . OCURV AuxMethodInvocation1 CCURV
   49                 | ID . OCURV error CCURV

    OCURV   shift, and go to state 75
    ASSIGN  shift, and go to state 76


State 42

   13 MethodBody: OBRACE AuxMethodBody . CBRACE

    CBRACE  shift, and go to state 77


State 43

   14 AuxMethodBody: VarDecl . AuxMethodBody

    error     shift, and go to state 33
    BOOL      shift, and go to state 18
    DO        shift, and go to state 34
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 35
    INT       shift, and go to state 20
    PARSEINT  shift, and go to state 36
    PRINT     shift, and go to state 37
    RETURN    shift, and go to state 38
    WHILE     shift, and go to state 39
    OBRACE    shift, and go to state 40
    ID        shift, and go to state 41

    CBRACE  reduce using rule 16 (AuxMethodBody)
    SEMI    reduce using rule 40 (auxStatement1)

    AuxMethodBody     go to state 78
    VarDecl           go to state 43
    Type              go to state 44
    Statement         go to state 45
    auxStatement1     go to state 46
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 44

   22 VarDecl: Type . ID auxVarDecl SEMI

    ID  shift, and go to state 79


State 45

   15 AuxMethodBody: Statement . AuxMethodBody

    error     shift, and go to state 33
    BOOL      shift, and go to state 18
    DO        shift, and go to state 34
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 35
    INT       shift, and go to state 20
    PARSEINT  shift, and go to state 36
    PRINT     shift, and go to state 37
    RETURN    shift, and go to state 38
    WHILE     shift, and go to state 39
    OBRACE    shift, and go to state 40
    ID        shift, and go to state 41

    CBRACE  reduce using rule 16 (AuxMethodBody)
    SEMI    reduce using rule 40 (auxStatement1)

    AuxMethodBody     go to state 80
    VarDecl           go to state 43
    Type              go to state 44
    Statement         go to state 45
    auxStatement1     go to state 46
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 46

   34 Statement: auxStatement1 . SEMI

    SEMI  shift, and go to state 81


State 47

   37 auxStatement1: Assignment .

    $default  reduce using rule 37 (auxStatement1)


State 48

   38 auxStatement1: MethodInvocation .

    $default  reduce using rule 38 (auxStatement1)


State 49

   39 auxStatement1: ParseArgs .

    $default  reduce using rule 39 (auxStatement1)


State 50

   11 MethodHeader: Type ID OCURV . FormalParams CCURV

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 51

    $default  reduce using rule 19 (FormalParams)

    FormalParams  go to state 82
    Type          go to state 53


State 51

   18 FormalParams: STRING . OSQUARE CSQUARE ID

    OSQUARE  shift, and go to state 83


State 52

   12 MethodHeader: VOID ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 84


State 53

   17 FormalParams: Type . ID auxFormalParams

    ID  shift, and go to state 85


State 54

   36 Statement: error SEMI .

    $default  reduce using rule 36 (Statement)


State 55

   32 Statement: DO Statement . WHILE OCURV Expr CCURV SEMI

    WHILE  shift, and go to state 86


State 56

   29 Statement: IF OCURV . Expr CCURV Statement ELSE Statement
   30          | IF OCURV . Expr CCURV Statement

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 87


State 57

   54 ParseArgs: PARSEINT OCURV . ID OSQUARE Expr CSQUARE CCURV
   55          | PARSEINT OCURV . error CCURV

    error  shift, and go to state 88
    ID     shift, and go to state 89


State 58

   33 Statement: PRINT OCURV . auxStatement2 CCURV SEMI

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66
    STRLIT    shift, and go to state 90

    auxStatement2     go to state 91
    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 92


State 59

   77 Expr: OCURV . Expr CCURV
   81     | OCURV . error CCURV

    error     shift, and go to state 93
    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 94


State 60

   72 Expr: PLUS . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 95


State 61

   73 Expr: MINUS . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 96


State 62

   74 Expr: NOT . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 97


State 63

   80 Expr: REALLIT .

    $default  reduce using rule 80 (Expr)


State 64

   79 Expr: DECLIT .

    $default  reduce using rule 79 (Expr)


State 65

   78 Expr: BOOLLIT .

    $default  reduce using rule 78 (Expr)


State 66

   47 Assignment: ID . ASSIGN Expr
   48 MethodInvocation: ID . OCURV AuxMethodInvocation1 CCURV
   49                 | ID . OCURV error CCURV
   75 Expr: ID . DOTLENGTH
   76     | ID .

    DOTLENGTH  shift, and go to state 98
    OCURV      shift, and go to state 75
    ASSIGN     shift, and go to state 76

    $default  reduce using rule 76 (Expr)


State 67

   35 Statement: RETURN auxStatement5 . SEMI

    SEMI  shift, and go to state 99


State 68

   56 Expr: Assignment .

    $default  reduce using rule 56 (Expr)


State 69

   57 Expr: MethodInvocation .

    $default  reduce using rule 57 (Expr)


State 70

   58 Expr: ParseArgs .

    $default  reduce using rule 58 (Expr)


State 71

   45 auxStatement5: Expr .
   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 45 (auxStatement5)


State 72

   31 Statement: WHILE OCURV . Expr CCURV Statement

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 113


State 73

   43 auxStatement4: Statement . auxStatement4

    error     shift, and go to state 33
    DO        shift, and go to state 34
    IF        shift, and go to state 35
    PARSEINT  shift, and go to state 36
    PRINT     shift, and go to state 37
    RETURN    shift, and go to state 38
    WHILE     shift, and go to state 39
    OBRACE    shift, and go to state 40
    ID        shift, and go to state 41

    CBRACE  reduce using rule 44 (auxStatement4)
    SEMI    reduce using rule 40 (auxStatement1)

    Statement         go to state 73
    auxStatement1     go to state 46
    auxStatement4     go to state 114
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 74

   28 Statement: OBRACE auxStatement4 . CBRACE

    CBRACE  shift, and go to state 115


State 75

   48 MethodInvocation: ID OCURV . AuxMethodInvocation1 CCURV
   49                 | ID OCURV . error CCURV

    error     shift, and go to state 116
    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    CCURV  reduce using rule 51 (AuxMethodInvocation1)

    Assignment            go to state 68
    MethodInvocation      go to state 69
    AuxMethodInvocation1  go to state 117
    ParseArgs             go to state 70
    Expr                  go to state 118


State 76

   47 Assignment: ID ASSIGN . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 119


State 77

   13 MethodBody: OBRACE AuxMethodBody CBRACE .

    $default  reduce using rule 13 (MethodBody)


State 78

   14 AuxMethodBody: VarDecl AuxMethodBody .

    $default  reduce using rule 14 (AuxMethodBody)


State 79

   22 VarDecl: Type ID . auxVarDecl SEMI

    COMMA  shift, and go to state 120

    $default  reduce using rule 24 (auxVarDecl)

    auxVarDecl  go to state 121


State 80

   15 AuxMethodBody: Statement AuxMethodBody .

    $default  reduce using rule 15 (AuxMethodBody)


State 81

   34 Statement: auxStatement1 SEMI .

    $default  reduce using rule 34 (Statement)


State 82

   11 MethodHeader: Type ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 122


State 83

   18 FormalParams: STRING OSQUARE . CSQUARE ID

    CSQUARE  shift, and go to state 123


State 84

   12 MethodHeader: VOID ID OCURV FormalParams CCURV .

    $default  reduce using rule 12 (MethodHeader)


State 85

   17 FormalParams: Type ID . auxFormalParams

    COMMA  shift, and go to state 124

    $default  reduce using rule 21 (auxFormalParams)

    auxFormalParams  go to state 125


State 86

   32 Statement: DO Statement WHILE . OCURV Expr CCURV SEMI

    OCURV  shift, and go to state 126


State 87

   29 Statement: IF OCURV Expr . CCURV Statement ELSE Statement
   30          | IF OCURV Expr . CCURV Statement
   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    CCURV  shift, and go to state 127
    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


State 88

   55 ParseArgs: PARSEINT OCURV error . CCURV

    CCURV  shift, and go to state 128


State 89

   54 ParseArgs: PARSEINT OCURV ID . OSQUARE Expr CSQUARE CCURV

    OSQUARE  shift, and go to state 129


State 90

   42 auxStatement2: STRLIT .

    $default  reduce using rule 42 (auxStatement2)


State 91

   33 Statement: PRINT OCURV auxStatement2 . CCURV SEMI

    CCURV  shift, and go to state 130


State 92

   41 auxStatement2: Expr .
   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 41 (auxStatement2)


State 93

   81 Expr: OCURV error . CCURV

    CCURV  shift, and go to state 131


State 94

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   77     | OCURV Expr . CCURV

    CCURV  shift, and go to state 132
    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


State 95

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   72     | PLUS Expr .

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 72 (Expr)


State 96

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | MINUS Expr .

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 73 (Expr)


State 97

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   74     | NOT Expr .

    $default  reduce using rule 74 (Expr)


State 98

   75 Expr: ID DOTLENGTH .

    $default  reduce using rule 75 (Expr)


State 99

   35 Statement: RETURN auxStatement5 SEMI .

    $default  reduce using rule 35 (Statement)


State 100

   59 Expr: Expr AND . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 133


State 101

   60 Expr: Expr OR . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 134


State 102

   65 Expr: Expr LT . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 135


State 103

   63 Expr: Expr GT . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 136


State 104

   61 Expr: Expr EQ . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 137


State 105

   66 Expr: Expr NEQ . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 138


State 106

   62 Expr: Expr GEQ . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 139


State 107

   64 Expr: Expr LEQ . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 140


State 108

   67 Expr: Expr PLUS . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 141


State 109

   68 Expr: Expr MINUS . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 142


State 110

   69 Expr: Expr STAR . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 143


State 111

   70 Expr: Expr DIV . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 144


State 112

   71 Expr: Expr MOD . Expr

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 145


State 113

   31 Statement: WHILE OCURV Expr . CCURV Statement
   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    CCURV  shift, and go to state 146
    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


State 114

   43 auxStatement4: Statement auxStatement4 .

    $default  reduce using rule 43 (auxStatement4)


State 115

   28 Statement: OBRACE auxStatement4 CBRACE .

    $default  reduce using rule 28 (Statement)


State 116

   49 MethodInvocation: ID OCURV error . CCURV

    CCURV  shift, and go to state 147


State 117

   48 MethodInvocation: ID OCURV AuxMethodInvocation1 . CCURV

    CCURV  shift, and go to state 148


State 118

   50 AuxMethodInvocation1: Expr . AuxMethodInvocation2
   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112
    COMMA  shift, and go to state 149

    $default  reduce using rule 53 (AuxMethodInvocation2)

    AuxMethodInvocation2  go to state 150


State 119

   47 Assignment: ID ASSIGN Expr .
   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 47 (Assignment)


State 120

   23 auxVarDecl: COMMA . ID auxVarDecl

    ID  shift, and go to state 151


State 121

   22 VarDecl: Type ID auxVarDecl . SEMI

    SEMI  shift, and go to state 152


State 122

   11 MethodHeader: Type ID OCURV FormalParams CCURV .

    $default  reduce using rule 11 (MethodHeader)


State 123

   18 FormalParams: STRING OSQUARE CSQUARE . ID

    ID  shift, and go to state 153


State 124

   20 auxFormalParams: COMMA . Type ID auxFormalParams

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20

    Type  go to state 154


State 125

   17 FormalParams: Type ID auxFormalParams .

    $default  reduce using rule 17 (FormalParams)


State 126

   32 Statement: DO Statement WHILE OCURV . Expr CCURV SEMI

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 155


State 127

   29 Statement: IF OCURV Expr CCURV . Statement ELSE Statement
   30          | IF OCURV Expr CCURV . Statement

    error     shift, and go to state 33
    DO        shift, and go to state 34
    IF        shift, and go to state 35
    PARSEINT  shift, and go to state 36
    PRINT     shift, and go to state 37
    RETURN    shift, and go to state 38
    WHILE     shift, and go to state 39
    OBRACE    shift, and go to state 40
    ID        shift, and go to state 41

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 156
    auxStatement1     go to state 46
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 128

   55 ParseArgs: PARSEINT OCURV error CCURV .

    $default  reduce using rule 55 (ParseArgs)


State 129

   54 ParseArgs: PARSEINT OCURV ID OSQUARE . Expr CSQUARE CCURV

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 157


State 130

   33 Statement: PRINT OCURV auxStatement2 CCURV . SEMI

    SEMI  shift, and go to state 158


State 131

   81 Expr: OCURV error CCURV .

    $default  reduce using rule 81 (Expr)


State 132

   77 Expr: OCURV Expr CCURV .

    $default  reduce using rule 77 (Expr)


State 133

   59 Expr: Expr . AND Expr
   59     | Expr AND Expr .
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 59 (Expr)


State 134

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   60     | Expr OR Expr .
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    AND    shift, and go to state 100
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 60 (Expr)


State 135

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   65     | Expr LT Expr .
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 65 (Expr)


State 136

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   63     | Expr GT Expr .
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 63 (Expr)


State 137

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   61     | Expr EQ Expr .
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    LT     shift, and go to state 102
    GT     shift, and go to state 103
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 61 (Expr)


State 138

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   66     | Expr NEQ Expr .
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    LT     shift, and go to state 102
    GT     shift, and go to state 103
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 66 (Expr)


State 139

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   62     | Expr GEQ Expr .
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 62 (Expr)


State 140

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   64     | Expr LEQ Expr .
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 64 (Expr)


State 141

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   67     | Expr PLUS Expr .
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 67 (Expr)


State 142

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   68     | Expr MINUS Expr .
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 68 (Expr)


State 143

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   69     | Expr STAR Expr .
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    $default  reduce using rule 69 (Expr)


State 144

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   70     | Expr DIV Expr .
   71     | Expr . MOD Expr

    $default  reduce using rule 70 (Expr)


State 145

   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   71     | Expr MOD Expr .

    $default  reduce using rule 71 (Expr)


State 146

   31 Statement: WHILE OCURV Expr CCURV . Statement

    error     shift, and go to state 33
    DO        shift, and go to state 34
    IF        shift, and go to state 35
    PARSEINT  shift, and go to state 36
    PRINT     shift, and go to state 37
    RETURN    shift, and go to state 38
    WHILE     shift, and go to state 39
    OBRACE    shift, and go to state 40
    ID        shift, and go to state 41

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 159
    auxStatement1     go to state 46
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 147

   49 MethodInvocation: ID OCURV error CCURV .

    $default  reduce using rule 49 (MethodInvocation)


State 148

   48 MethodInvocation: ID OCURV AuxMethodInvocation1 CCURV .

    $default  reduce using rule 48 (MethodInvocation)


State 149

   52 AuxMethodInvocation2: COMMA . Expr AuxMethodInvocation2

    PARSEINT  shift, and go to state 36
    OCURV     shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    REALLIT   shift, and go to state 63
    DECLIT    shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    ID        shift, and go to state 66

    Assignment        go to state 68
    MethodInvocation  go to state 69
    ParseArgs         go to state 70
    Expr              go to state 160


State 150

   50 AuxMethodInvocation1: Expr AuxMethodInvocation2 .

    $default  reduce using rule 50 (AuxMethodInvocation1)


State 151

   23 auxVarDecl: COMMA ID . auxVarDecl

    COMMA  shift, and go to state 120

    $default  reduce using rule 24 (auxVarDecl)

    auxVarDecl  go to state 161


State 152

   22 VarDecl: Type ID auxVarDecl SEMI .

    $default  reduce using rule 22 (VarDecl)


State 153

   18 FormalParams: STRING OSQUARE CSQUARE ID .

    $default  reduce using rule 18 (FormalParams)


State 154

   20 auxFormalParams: COMMA Type . ID auxFormalParams

    ID  shift, and go to state 162


State 155

   32 Statement: DO Statement WHILE OCURV Expr . CCURV SEMI
   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    CCURV  shift, and go to state 163
    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


State 156

   29 Statement: IF OCURV Expr CCURV Statement . ELSE Statement
   30          | IF OCURV Expr CCURV Statement .

    ELSE  shift, and go to state 164

    $default  reduce using rule 30 (Statement)


State 157

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr . CSQUARE CCURV
   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    CSQUARE  shift, and go to state 165
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    LT       shift, and go to state 102
    GT       shift, and go to state 103
    EQ       shift, and go to state 104
    NEQ      shift, and go to state 105
    GEQ      shift, and go to state 106
    LEQ      shift, and go to state 107
    PLUS     shift, and go to state 108
    MINUS    shift, and go to state 109
    STAR     shift, and go to state 110
    DIV      shift, and go to state 111
    MOD      shift, and go to state 112


State 158

   33 Statement: PRINT OCURV auxStatement2 CCURV SEMI .

    $default  reduce using rule 33 (Statement)


State 159

   31 Statement: WHILE OCURV Expr CCURV Statement .

    $default  reduce using rule 31 (Statement)


State 160

   52 AuxMethodInvocation2: COMMA Expr . AuxMethodInvocation2
   59 Expr: Expr . AND Expr
   60     | Expr . OR Expr
   61     | Expr . EQ Expr
   62     | Expr . GEQ Expr
   63     | Expr . GT Expr
   64     | Expr . LEQ Expr
   65     | Expr . LT Expr
   66     | Expr . NEQ Expr
   67     | Expr . PLUS Expr
   68     | Expr . MINUS Expr
   69     | Expr . STAR Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr

    AND    shift, and go to state 100
    OR     shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NEQ    shift, and go to state 105
    GEQ    shift, and go to state 106
    LEQ    shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112
    COMMA  shift, and go to state 149

    $default  reduce using rule 53 (AuxMethodInvocation2)

    AuxMethodInvocation2  go to state 166


State 161

   23 auxVarDecl: COMMA ID auxVarDecl .

    $default  reduce using rule 23 (auxVarDecl)


State 162

   20 auxFormalParams: COMMA Type ID . auxFormalParams

    COMMA  shift, and go to state 124

    $default  reduce using rule 21 (auxFormalParams)

    auxFormalParams  go to state 167


State 163

   32 Statement: DO Statement WHILE OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 168


State 164

   29 Statement: IF OCURV Expr CCURV Statement ELSE . Statement

    error     shift, and go to state 33
    DO        shift, and go to state 34
    IF        shift, and go to state 35
    PARSEINT  shift, and go to state 36
    PRINT     shift, and go to state 37
    RETURN    shift, and go to state 38
    WHILE     shift, and go to state 39
    OBRACE    shift, and go to state 40
    ID        shift, and go to state 41

    SEMI  reduce using rule 40 (auxStatement1)

    Statement         go to state 169
    auxStatement1     go to state 46
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 165

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE . CCURV

    CCURV  shift, and go to state 170


State 166

   52 AuxMethodInvocation2: COMMA Expr AuxMethodInvocation2 .

    $default  reduce using rule 52 (AuxMethodInvocation2)


State 167

   20 auxFormalParams: COMMA Type ID auxFormalParams .

    $default  reduce using rule 20 (auxFormalParams)


State 168

   32 Statement: DO Statement WHILE OCURV Expr CCURV SEMI .

    $default  reduce using rule 32 (Statement)


State 169

   29 Statement: IF OCURV Expr CCURV Statement ELSE Statement .

    $default  reduce using rule 29 (Statement)


State 170

   54 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV .

    $default  reduce using rule 54 (ParseArgs)
